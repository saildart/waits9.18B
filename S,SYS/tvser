COMMENT ⊗   VALID 00006 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00002 00002	TVINI TVDSP HUNG TVOPN TVREL
C00005 00003	TVINP
C00008 00004	IOPINT IOPHNG
C00011 00005	TVRED
C00013 00006	TVIN1 TVIN2
C00015 ENDMK
C⊗;
;TVINI TVDSP HUNG TVOPN TVREL

IFN TVNUM,<

BEGIN TVSER ↔ SUBTTL	TV CAMERA SERVICE	TVINI, TVDSP, TVOPN

TVINI:	CONO IOP,0		;STOP THE 167
	CONO TV,0		;AND THE CAMERA
	SETOM IOPBSY
	HLLZS IOPCON
	POPJ P,


	JRST TVINI	;INITIALIZE
	JRST HUNG	;HUNG TV CAMERA
↑TVDSP:
IFE FTTVFS,<
	POPJ P,		;RELEASE.
>;IFE FTTVFS
IFN FTTVFS,<
	JRST TVREL	;RELEASE
>;IFN FTTVFS
	POPJ P,		;CLOSE OUTPUT
	JRST ILLOUT	;OUTPUT
	JSP DAT,UERROR	;BUFFERED INPUT
	JRST CPOPJ1	;ENTER
	JRST CPOPJ1	;LOOKUP
	JRST ILLOUT	;DUMP OUTPUT
	JRST TVINP	;DUMP INPUT
	POPJ P,		;USETO
	POPJ P,		;USETI
	POPJ P,		;UGETF
	JRST CPOPJ1	;RENAME
	POPJ P,		;CLOSE INPUT
	POPJ P,		;UTPCLR
	POPJ P,		;MTAPE

HUNG:	JRST CPOPJ1		;LET THE IOP HUNG TIMEOUT DO ITS THING.

IFN FTTVFS,<
;CALLED FROM THE OPEN UUO AT THE VERY END AFTER EVERYTHING IS DONE
↑TVOPN:	SKIPE TVBUFP		;THERE SHOULDN'T BE ONE BUT USE IT IF IT EXISTS
	POPJ P,
TVXTRA←←10000			;Room we make sure we leave after getting our FS
	MOVE TAC,FSTOP
	ADDI TAC,TVBLEN+TVXTRA	;Make sure there is room for TV buf plus spare
	ADD TAC,TVMARG		;Allow room for TV clobberage!
	CAMLE TAC,FSLIM9	;ARE WE DANGEROUSLY HIGH ALREADY?
	 JRST [	JSP TAC,UUOMES
		 ASCIZ/Not enough free storage for TV camera, UUO/]
	MOVEI AC3,TVBLEN
	ADD AC3,TVMARG		;Allow room for TV clobberage
	PUSHJ P,FSGET		;GET A B-I-G BUFFER
	 PUSHJ P,BUGTRP		;CAN'T LOSE AT UUO LEVEL
	ADD AC1,TVMARG		;Keep TV away from FS header word!
	MOVEM AC1,TVBUFP
	POPJ P,

TVREL:	SKIPN AC1,TVBUFP
	POPJ P,			;DON'T HAVE ANY BUFFER
	SETZM TVBUFP
	SUB AC1,TVMARG		;Re-normalize to real FS beginning
	JRST FSGIVE		;GIVE IT BACK
>;IFN FTTVFS
;TVINP

;CALL:	INPUT CHAN,ADDR	;DEVICE TV IS INITED ON IOCHANNEL NUMBER "CHAN"
;
;ADDR POINTS TO A 4-WORD BLOCK AS FOLLOWS:
;ADDR/		-WC,,ADDRESS OF FIRST WORD		;NOTE THIS AOBJN NOT IOWD
;ADDR+1/	0,,<TV CAMERA CONO BITS>
;ADDR+2/	<TV CAMERA DATAO WORD>
;ADDR+3/	<CONI BITS FROM THE IOP ARE RETURNED HERE>



TVINP:
IFN FTTVFS,<
	PUSHJ P,TVOPN			;MAKE SURE WE HAVE A BUFFER
>;IFN FTTVFS
	XCTR XRW,[MOVES 3(UUO)]		;CHECK WRITABILITY OF CONI WORD.
	MOVSI AC1,(UUO)
	HRRI AC1,TVARGS
	XCTR XBLTR,[BLT AC1,TVARGS+2]	;COPY THE ARGUMENTS
	HRRZ AC1,TVARGS			;ADDRESS CHECK THE AOBJN POINTER
	HLRO TAC1,TVARGS		;GET -SIZE OF TRANSFER
	MOVN TAC1,TAC1
IFN FTTVBUF,<
	CAIG TAC1,TVBLEN		;CHECK SIZE LIMIT ON TRANSFER
>;IFN FTTVBUF
	CAIG AC1,JOBPFI			;ABOVE AREA PROTECTED FROM I/O?
	JRST UADRER			;NO. ADDRESS ERROR.
	ADD AC1,TAC1			;CALCULATE THE END OF THE TRANSFER.+1
	HLRZ TAC1,JBTPAG(J)
	LSH TAC1,9
	CAMLE AC1,TAC1			;IN BOUNDS?
	JRST ADRERR			;NO.
IFE FTTVBUF,<
	NOCACHE (CSHTV)
	PUSHJ P,SETACT			;YES, LOCK INTO CORE FIRST
>;IFE FTTVBUF
IFN FTTVBUF,<
	MOVSI IOS,DEVSBB
	IORM IOS,DEVIOS(DDB)
>;IFN FTTVBUF
	MOVEI TEM,TVRED			;NO.  GET STARTUP DISPATCH
	MOVEM TEM,IOPBSY		;STORE DISPATCH LOCATION
	MOVEI TEM,IOPANY!IOPJDN		;RESET CH6 CONSZ BITS
	HRRM TEM,IOPCON
	MOVEI TEM,2
	MOVEM TEM,IOPHCT		;START COUNTING HUNG COUNT.
	CONO IOP,IOPJDN!IOPCHN		;SET JBDN TO MAKE A STARTUP INTERRUPT.
IFN FTTVBUF,<
	PUSHJ P,WSYNC			;WAIT FOR DONE
	XCTR XR,[MOVE AC1,(UUO)]	;GET AOBJN POINTER BACK
	HLRO AC2,AC1			;-WC
	MOVN AC2,AC2			;WC
	ADDI AC2,(AC1)			;ENDING ADDRESS+1
IFE FTTVFS,<
	HRLI AC1,TVBUF
>;IFE FTTVFS
IFN FTTVFS,<
	HRL AC1,TVBUFP
>;IFN FTTVFS
	XCTR XBLTW,[BLT AC1,-1(AC2)]	;BLT THE DATA FROM THE SYSTEM BUFFER TO USER
>;IFN FTTVBUF
	MOVE TAC1,IOPCNI
	XCTR XW,[MOVEM TAC1,3(UUO)]	;GIVE USER IOP STATUS
	POPJ P,
;IOPINT IOPHNG

SUBTTL IOP INTERRUPT CODE

;INTERRUPTS COME HERE, AND DISPATCH THROUGH IOPBSY

↑↑IOPINT:			;HERE FOR IOP INTERRUPT
	JSR TVSAV		;SAVE AC'S.
	SETZM IOPHCT		;SINCE WE'VE SEEN AN INTERRUPT, DISABLE HUNG TIME
	MOVNI AC1,1
	EXCH AC1,IOPBSY		;IOPBSY←-1
	JUMPG AC1,(AC1)		;JUMP IF DISPATCH IS SET (TVRED, TVIN1)
	CONI IOP,IOPWCM		;GET CONI BITS INTO A RANDOM CELL
	PUSHJ P,DISGST		;PRINT TIME OF NEW MESSAGE ON CTY
	PUSHJ P,DISERR
	[ASCIZ	/UNEXPECTED IOP INTERRUPT
IOP CONI = /]
	DISARG LOC,IOPWCM
	[ASCIZ /
/]
	-1
	CONO IOP,0		;SHUT DOWN IOP.  CLEAR PIA
	HLLZS IOPCON
	POPJ P,

↑↑IOPHNG:			;HERE FOR IOP HUNG TIMEOUT
	SETOM IOPHCT		;FLAG THAT WE'RE HUNG.
	CONO PI,IOPOFF		;TURN OFF CHANNEL 6
	MOVNI AC1,1
	EXCH AC1,IOPBSY		;IOPBSY←-1
	JUMPL AC1,.+2		;JUMP IF NO DISPATCH IS SET
	PUSHJ P,(AC1)		;DISPATCH (TO DSKSTART, FINOP, TVIN1)
	CONO PI,IOPON
	POPJ P,
;TVRED

;WE GET HERE WITH PI IN PROGRESS ON CH6.  IOP IS OURS. 
;ADDRESS OF USER'S 4-WORD COMMAND BLOCK IS IN DSKBUF


TVRED:	CONO IOP,0		;ACT LIKE WE'RE GOING TO BE IDLE. CLEAR IOP PIA
	HLLZS IOPCON		;CLEAR CONSZ MASK FOR IOP
	MOVEI DDB,TVDDB		;HERE FROM DSKSTART IN FBPACK
	LDB J,PJOBN
IFE FTTVBUF,<
	HRRZ J,JBTPAG(J)	;COMPUTE RELOCATION
	LSH J,9
	ADD J,TVARGS		;MAKE AOBJN POINTER ABSOLUTE!
>;IFE FTTVBUF
IFN FTTVBUF,<
	HLLZ J,TVARGS		;GET -WC FROM USER ARGS
IFE FTTVFS,<
	HRRI J,TVBUF		;READ INTO THE BUFFER
>;IFE FTTVFS
IFN FTTVFS,<
	HRR J,TVBUFP
>;IFN FTTVFS
>;IFN FTTVBUF
	MOVEI TAC,IOPANY!IOPJDN	;CONSO BITS FOR IOP.
	HRRM TAC,IOPCON		;ENABLE SOFTWARE FOR INTERRUPT
	MOVE TAC,TVARGS+1	;GET THE TV CONO BITS FROM USER
	CONO IOP,IOPCHN		;SET IOP PIA. SET INPUT
	DATAO IOP,J		;FEED IT WC,MA (ABSOLUTE).
	CONO TV,(TAC)		;SEE TV INTERFACE WRITEUP.
	DATAO TV,TVARGS+2	
	MOVEI AC1,TVIN1		;DISPATCH ADDRESS FOR NEXT IOP INT
	MOVEM AC1,IOPBSY	
	MOVEI AC1,2
	MOVEM AC1,IOPHCT	;SET UP HUNG TIMEOUT
	POPJ P,			;DISMISS INTERRUPT AND WAIT
;TVIN1 TVIN2

TVIN1:	MOVEI DDB,TVDDB
	LDB J,PJOBN
	CONI IOP,IOPCNI
	MOVE IOS,DEVIOS(DDB)		;GET IOS
	TRNE TAC1,IOPANY		;ANY IOP ERROR BITS?
	TRNN IOS,100			;ENABLED FOR THIS DATA?
	JRST TVIN2			;NO ERRORS OR NOT ENABLED FOR ERRORS
	DATAI IOP,IOS			;GET THE IOP WCMA
	HRRZ IOS,IOS
IFE FTTVBUF,<
	HRRZ TAC1,JBTPAG(J)		;JOB'S PAGE 0
	LSH TAC1,9			;ABSOLUTE ADDR OF JOB'S PAGE 0
	SUB IOS,TAC1			;USER'S RELATIVE ADDRESS. 
>;IFE FTTVBUF
IFN FTTVBUF,<
IFE FTTVFS,<
	SUBI IOS,TVBUF
>;IFE FTTVFS
IFN FTTVFS,<
	SUB IOS,TVBUFP
>;IFN FTTVFS
>;IFN FTTVBUF
	HRLM IOS,IOPCNI			;GIVE USER HIS ADDRESS.
TVIN2:	CONO IOP,0
	HLLZS IOPCON
IFE FTTVBUF,<
	MOVEI IOS,IOACT			;FIRST, CLEAR THE ACTIVE BIT
>;IFE FTTVBUF
IFN FTTVBUF,<
	MOVSI IOS,DEVSBB
>;IFN FTTVBUF
	ANDCAB IOS,DEVIOS(DDB)
	TLNE IOS,IOW			;NOW, BRING HIM OUT OF IO WAIT
	PUSHJ P,SETIOD
IFE FTTVBUF,<
	CACHE (CSHTV)
>;IFE FTTVBUF
	POPJ P,

	BEND TVSER

>;IFN TVNUM
