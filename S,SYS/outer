COMMENT ⊗   VALID 00039 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00007 00002	OUTER BLOCK SYMBOL DEFINITIONS AC ASSIGNMENTS  LINE ITEM HPOS JBUF CHR BUFPNT
C00013 00003	PROCESSOR IDENTFICATION / PROCESSOR CONFIGURATION  CTY
C00017 00004	PAGER DEFINITIONS - XCTR DEFINITIONS  XR XW XRW XE XLB XDB XSTKR XSTKW XWSTKR XBLTR XBLTW XBLTRW MATOFF XR XW XRW XE XLB XDB XSTKR XSTKW XWSTKR XBLTR XBLTW XBLTRW BBN70 BBN71 BBN72 TSW P2XR P2XW P2XRW P2XLB P2STKR P2STKW P2XRSW P2XE
C00021 00005	SIZE OF PHYSICAL MEMORY IN DECIMAL K (1024) 
C00024 00006	MNEMONICS FOR DDB WORDS, TTYTAB BITS  COMBIT DLYBIT PAUSEB KILTTY KILDPY
C00028 00007	    DEVICE SERVICE DISPATCH TABLE ASSIGNMENTS 
C00030 00008	 DEVICE CHARACTERISTICS WORD DEFINITIONS 
C00033 00009	 DDB ASSIGNMENTS, DEVCMR BITS 
C00036 00010	 I/O STATUS WORD ASSIGNMENTS 
C00039 00011	LEFT HALF USRJDA (JOB DEVICE ASSIGNMENTS) UUO'S FOR THIS CHANNEL SINCE LAST INIT 
C00040 00012	 JOB BUFFER AREA HEADER 
C00041 00013	JOB STATUS WORD - JBTSTS - BIT ASSIGNMENTS 
C00045 00014	JBTSIN SWAP IN LIST BITS 
C00051 00015	JBTST2	TWO PROCESSOR INTERLOCKED SPACEWAR STATUS BITS 
C00054 00016	PRIVILEGE BITS (IN JBTPRV AND JB2PRV)  ENPASS ENACTV FREPRV
C00060 00017	STATISTICS VARIABLES (FTSTAT) 
C00062 00018	 SYSTEM MACROS 
C00066 00019	MORE SYSTEM MACROS, OPDEFS  VALCH3 VALCH4 VALCH5 VALCH6 VALCH7 D.CURSOR D.LEXFR D.PPXFR D.POG D.WHOWRT D.ERASE D.WSE D.PPSTAR NDDTYP
C00076 00020	 MACROS TO SYNCHRONIZE PROCESSORS 
C00077 00021	MACROS TO PUSH AND POP ACS, DISASTER MACROS  FIXNUM FIXLEN
C00080 00022	PARAMETER ASSIGNMENTS FOR THIS SYSTEM. 
C00089 00023	 HERE, WE DEFINE THE LEGAL QUEUES AND QUANTUM TIMES 
C00091 00024	DEVICE NAMES NOT IN THE ASSEMBLER.(IN INCREASING ORDER) 
C00096 00025	IOP AND MPX BITS 
C00098 00026	C1 DISK CHANNEL AND DISK DEFINITIONS  TRKCYL BKPTRK RCPBLK SWPWRP SECSIZ SWPAKS FPACKS UPACKS TRKCYL BKPTRK RCPBLK SWPWRP SECSIZ SWPAKS FPACKS UPACKS NPACKS NSBUFS RECSIZ RECWSH CRMAX BKPGRP BKDSIZ SWDSIZ BLKWDS RCPGRP RCPTRK NSYPGS C1SBI C1RSI C1MPRL C1SRUN C1CONT C1SCH C1RST C1CCIF C1INTE C1INTD C1SCF1 C1CCF1 C1MPCN C1LCD C1LPT C1SYSR C1SCAN C1SDIA C1DCI CIF CF1 CF2 ATTN STMOD CUEND IBMBSY CHNEND DEVEND UCHK UXCPTN DHNGCT DLHNGCT BITCL0 CMDRJT BITCL1 BITCL2 BITCL4 BITCL5 WRTINH PERM BITEQU SKCHK SKINCP RTYABT DVERR DWERR HACOR CNTCOR KEYCOR DATCOR HAUCOR CNTUCO KEYUCO DATUCO ERRUSE
C00107 00027	XGP DEFINITIONS  FNTMAX
C00108 00028	STANDARD MAG TAPE DENSITY(556 BPI),PARITY(ODD-BINARY) 
C00110 00029	 INTERRUPT BIT DEFINITIONS, APR CONI BIT DEFINITIONS, PC FLAGS  CPUMSK
C00115 00030	THE FOLLOWING ARE USED TO CREATE MXQUE  NQUES
C00116 00031	CHANNEL NUMBERS, CHANNEL TRAP LOCATIONS AND THE PI CHANNEL ON AND OFF BITS  SCNPIF
C00121 00032	BITS IN KBDCHR TABLE.  INDEX INTO TABLE WITH DCA PORT NUMBER. 
C00123 00033	BITS AND FIELDS IN DCATAB:  
C00126 00034	Display macros and defs 
C00132 00035	Cart interface CONO bits 
C00133 00036	JBTMSC bits  NOXRST STBUFC DVWDIF TEMPPR QQMQTL
C00135 00037	Pager map bits P.READ P.WRT P.XCT P.CAC P.ACC P.KEEP PREAD PREADC PWRT PWRTC P.IMM P.PUBL 
C00137 00038	Exec page definitions  PSB EXPGT ILLADR DTEEXP DDTPGE P2MNUM P2VORG P2XORG TOPHIP
C00143 00039	JBTCSH - JOB CACHE DISABLE BITS 
C00144 ENDMK
C⊗;
SUBTTL OUTER BLOCK SYMBOL DEFINITIONS ;AC ASSIGNMENTS ;⊗ LINE ITEM HPOS JBUF CHR BUFPNT

.AUXIL
XALL
DEFINE XD (SYMBOL,VALUE)
<↓SYMBOL←VALUE
INTERN SYMBOL>			;Make LOADER detect conflicts.

;The file S.MAC has copies of these defs for the MACRO system sources.
;* MEANS LOADED BY UUO HANDLER ON ALL UUOS

XD IOS,0	;*IO DEVICE STATUS WORD (SEE BELOW FOR BITS)

XD TAC,1	;TEMPORARY

XD TAC1,2	;TEMPORARY
↓LINE←TAC1	;SCANNER LINE NUMBER IN TTYSER AND IMPSER

IFN FT17P,<
XD J,3		;*JOB NUMBER, OR BUFFER ITEM COUNT
↓ITEM←←J
↓HPOS←←J	;HORIZONTAL POSITION OF TTY.(0-71) IN TTYSER


XD DDB,4	;*LH=UUOS DONE SO FAR FOR THIS DEVICE (SEE BELOW),
		;RH=ADDRESS OF DEVICE DATA BLOCK

XD DAT,5	;TTY OUTPUT BUFFER POINTER FOR COMMANDS, ERROR MESSAGES, OR TEMP.
↓JBUF←←DAT	;ADDRESS OF 3 WORD BUFFER HEADER IN USER AREA

XD PROG,6	;*LH=HIGHEST REL. LOC. IN USER AREA
		;RH=ABSOLUTE ADDRESS OF USER AREA

XD TEM,7	;TEMPORARY. NO SPECIAL MEANING
↓CHR←←TEM	;USED IN DPYSER, TTYSER, LINED, AND DLNSER AS CURRENT CHARACTER

XD DSER,10	;*ADDRESS OF DEVICE SERVICE ROUT. DISPATCH TABLE

XD UCHN,11	;*USER IO CHANNEL NO. (AC FIELD OF THE UUO)
↓BUFPNT←←UCHN	;CONTENTS OF FIRST WORD OF 3 WORD USER BUFFER HEADER

XD PID,12	;PROCESSOR DATA AREA ADDRESS

XD UUO,13	;*CURRENT UUO IN PROGRESS

XD AC1,14	;TEMPORARY ACS

XD AC2,15

XD AC3,16

XD P,17		;*PUSH DOWN POINTER (SEPARATE LIST FOR EACH PI CHANNEL AND EACH JOB)
>;IFN FT17P

IFE FT17P,<
XD P,3		;*PUSH DOWN POINTER (SEPARATE LIST FOR EACH PI CHANNEL AND EACH JOB)

XD J,4		;*JOB NUMBER, OR BUFFER ITEM COUNT
↓ITEM←←J
↓HPOS←←J	;HORIZONTAL POSITION OF TTY.(0-71) IN TTYSER


XD DAT,5	;TTY OUTPUT BUFFER POINTER FOR COMMANDS, ERROR MESSAGES, OR TEMP.
↓JBUF←←DAT	;ADDRESS OF 3 WORD BUFFER HEADER IN USER AREA

XD DDB,6	;*LH=UUOS DONE SO FAR FOR THIS DEVICE (SEE BELOW),
		;RH=ADDRESS OF DEVICE DATA BLOCK

XD PROG,7	;*LH=HIGHEST REL. LOC. IN USER AREA
		;RH=ABSOLUTE ADDRESS OF USER AREA

XD TEM,10	;TEMPORARY. NO SPECIAL MEANING
↓CHR←←TEM	;USED IN DPYSER, TTYSER, LINED, AND DLNSER AS CURRENT CHARACTER

XD DSER,11	;*ADDRESS OF DEVICE SERVICE ROUT. DISPATCH TABLE

XD UCHN,12	;*USER IO CHANNEL NO. (AC FIELD OF THE UUO)
↓BUFPNT←←UCHN	;CONTENTS OF FIRST WORD OF 3 WORD USER BUFFER HEADER

XD PID,13	;PROCESSOR DATA AREA ADDRESS

XD UUO,14	;*CURRENT UUO IN PROGRESS

XD AC1,15	;TEMPORARY ACS

XD AC2,16

XD AC3,17

>;IFE FT17P

DEFINE XD (SYMBOL,VALUE) <↓SYMBOL←←VALUE>

;Tops-10 AC definitions

;;NOTE: If you CHANGE any of these, then you MUST make the same change
;;to the duplicate definitions in S.MAC and recompile all MACRO files!!
;;The INTERNAL statement below will force LOADER to warn you if you've
;;screwed up.

INTERNAL S,W,U,J,M,F,T1,T2,T3,T4,P1,P2,P3,P4,P

;A few of these are downarrowed because DDT has different defs.
S←←0		;Same as WAITS IOS
W←←1
↓U←←2		;Same as WAITS LINE (TAC1)
IFN FT17P,<
;J←←3		;Same as WAITS J
F←←4		;Same as WAITS DDB
↓T1←←5
↓T2←←T1+1
↓T3←←T2+1
↓T4←←T3+1
↓P1←←11
↓P2←←P1+1
↓P3←←P2+1
↓P4←←P3+1
↓M←←15
;R←←16		;supposedly unused
;P←←17		;Same as WAITS P
>;IFN FT17P
IFE FT17P,<
;P←←3		;Same as WAITS P
;J←←4		;Same as WAITS J
↓M←←5
F←←6		;Same as WAITS DDB
;;R←←7		;supposedly unused
↓T1←←10
↓T2←←T1+1
↓T3←←T2+1
↓T4←←T3+1
↓P1←←14
↓P2←←P1+1
↓P3←←P2+1
↓P4←←P3+1
>;IFE FT17P
;PROCESSOR IDENTFICATION / PROCESSOR CONFIGURATION ;⊗ CTY
;THESE MACROS DEPEND ON HARDWARE MODS TO THE 166 AND KA10 CTY DEVICES.

;PROCESSOR CONFIGURATION. (PRCONF)
;	P1	P2
; 0	KA10	166
; 1	KL10	166
; 2	KL10	KA10
;

CTY←←120

IFE FTF2,<
OPDEF SKPKA [CONSO CTY,1B28]	;SKIP IF PROCESSOR IS A KA10
OPDEF SKPNKA [CONSZ CTY,1B28]	;SKIP IF PROCESSOR IS NOT A KA10
OPDEF SKP6 [CONSO CTY,1B27]	;SKIP IF PROCESSOR IS A PDP6
OPDEF SKPN6 [CONSZ CTY,1B27]	;SKIP IF PROCESSOR IS NOT A PDP6
OPDEF SKPKL [CONSZ CTY,3B28]	;SKIP IF PROCESSOR IS A KL10
OPDEF SKPNKL [CONSO CTY,3B28]	;SKIP IF PROCESSOR IS NOT A KL10
>;IFE FTF2

IFN FTF2,<
OPDEF SKPKA [CAIA]	;SKIP IF PROCESSOR IS A KA10
OPDEF SKPNKA [CAI]	;SKIP IF PROCESSOR IS NOT A KA10
OPDEF SKP6 [CAI]	;SKIP IF PROCESSOR IS A PDP6
OPDEF SKPN6 [CAIA]	;SKIP IF PROCESSOR IS NOT A PDP6
OPDEF SKPKL [CAI]	;SKIP IF PROCESSOR IS A KL10
OPDEF SKPNKL [CAIA]	;SKIP IF PROCESSOR IS NOT A KL10
OPDEF SKIPP1 [CAIA]	;SKIP IF PRIMARY PROCESSOR
OPDEF SKIPP2 [CAI]	;SKIP IF SECONDARY PROCESSOR
DEFINE NOCACHE (A)<>
DEFINE CACHE (A)<>
DEFINE CACHON <>
>;IFN FTF2

DEFINE NOKL10 <IFE PRCONF>
DEFINE IFKL10 <IFG PRCONF>
DEFINE NOSTRUCT <
;PRINTX NOSTRUCTURE CODE
IFE FTSTRUCT>
DEFINE IFSTRUCT <
;PRINTX STRUCTURE CODE
IFN FTSTRUCT>

IFE FTF2,<
NOKL10,<				;P1=KA, P2=166
OPDEF	SKIPP1	[SKPKA]			;SKIP IF KA10
OPDEF	SKIPP2	[SKPNKA]		;SKIP IF NOT KA10
DEFINE	NOCACHE	(A)<>
DEFINE	CACHE	(A)<>
DEFINE	CACHON	<>
>;NOKL10

IFKL10,<				;P1=KL, P2=166 OR KA10
OPDEF	SKIPP1	[SKPKL]			;SKIP IF NOT PDP6 OR KA10
OPDEF	SKIPP2	[SKPNKL]		;SKIP IF PDP6 OR KA10

DEFINE	NOCACHE (A)<
	PUSH P,TAC
	MOVSI TAC,A
	PUSHJ P,CSHOFF
	POP P,TAC
>

DEFINE	CACHE (A)<
	PUSH P,TAC
	MOVSI TAC,A
	PUSHJ P,CSHOK
	POP P,TAC
>

DEFINE	CACHEON <PUSHJ P,CSHSET>

>;IFKL10
>;IFE FTF2
;PAGER DEFINITIONS - XCTR DEFINITIONS ;⊗ XR XW XRW XE XLB XDB XSTKR XSTKW XWSTKR XBLTR XBLTW XBLTRW MATOFF XR XW XRW XE XLB XDB XSTKR XSTKW XWSTKR XBLTR XBLTW XBLTRW BBN70 BBN71 BBN72 TSW P2XR P2XW P2XRW P2XLB P2STKR P2STKW P2XRSW P2XE

IFKL10,<
↓XR←←4		;READ
↓XW←←4		;WRITE
↓XRW←←4		;READ MODIFY WRITE, BLT IN USER SPACE.
↓XE←←14		;EFFECTIVE ADDRESS CALCULATION (SEE PAGSER, PFIOXC)
↓XLB←←1		;LOAD BYTE (BYTE POINTER IN EXEC SPACE)
↓XDB←←1		;DEPOSIT BYTE (BYTE POINTER IN EXEC SPACE)
↓XSTKR←←1
↓XSTKW←←1
↓XWSTKR←←XSTKR+XW
↓XBLTR←←1
↓XBLTW←←4
↓XBLTRW←←5
>;IFKL10

IFE FTMAOFF,<
↑MATOFF←←0	;The amount of offset is 100, or 0 if not offset
>;IFE FTMAOFF

;AC FIELD DEFINITIONS FOR XCTR KA-10
NOKL10,<
↓XR←←4		;READ
↓XW←←1		;WRITE
↓XRW←←5		;READ MODIFY WRITE,
↓XE←←10		;EFFECTIVE ADDRESS CALCULATION INDIRECTING THRU USER SPACE
↓XLB←←1		;LOAD BYTE (BYTE POINTER IN EXEC SPACE)
↓XDB←←1		;DEPOSIT BYTE (BYTE POINTER IN EXEC SPACE)
↓XSTKR←←XR		;FOR POP FROM USER SPACE
↓XSTKW←←XW		;FOR PUSH INTO USER SPACE
;↓XRSW←←XRW		;FOR PUSHING USER DATA INTO USER SPACE
↓XWSTKR←←XRW		;FOR POP WITH STACK AND DESTINATION IN USER SPACE
↓XBLTR←←XR		;BLT FROM USER TO EXEC
↓XBLTW←←XW		;BLT FROM EXEC TO USER
↓XBLTRW←←XRW		;BLT IN USER SPACE

;Printx Which of BBN70,71,72 are really relocated by MA Trap Offset??
↑BBN70←←70+MATOFF ;TRAP INSTRUCTION LOCATION FOR PAGE FAULTS, SHOULD BE JSR PAGINT
↑BBN71←←71	  ;FIRST WORD READ BY PAGER IN CONO PAG,0
↑BBN72←←72	  ;SECOND WORD READ BY PAGER IN CONO PAG,0

;↑P2PAG←←71	;LOCATIONS USED BY CONO PAG, ON KA10
;↑P2PAG1←←72	;  "
;↑P2PAGT←←170	;THIS IS THE TRAP LOCATION FOR PAGE FAULTS
↑TSW←←571	;TRAP STATUS WORD (ADDRESS IN PSB)
>;NOKL10


;AC FIELD DEFINITIONS FOR XCTR KA-10
IFN FTP2PAG,<
↓P2XR←←4		;READ
↓P2XW←←1		;WRITE
↓P2XRW←←5		;READ MODIFY WRITE,
↓P2XLB←←1		;LOAD BYTE (BYTE POINTER IN EXEC SPACE)
;↓XDB←←1		;DEPOSIT BYTE (BYTE POINTER IN EXEC SPACE)
↓P2STKR←←P2XR		;FOR POP FROM USER SPACE
↓P2STKW←←P2XW		;FOR PUSH INTO USER SPACE
↓P2XRSW←←P2XRW		;FOR PUSHING USER DATA INTO USER SPACE
↓P2XE←←10		;EFFECTIVE ADDRESS CALCULATION INDIRECTING THRU USER SPACE
;↓XWSTKR←←XRW		;FOR POP WITH STACK AND DESTINATION IN USER SPACE
;↓XBLTR←←XR		;BLT FROM USER TO EXEC
;↓XBLTW←←XW		;BLT FROM EXEC TO USER
;↓XBLTRW←←XRW		;BLT IN USER SPACE

DEFINE	P2XCTR	(A,B)	<XCT A,[B]>
>;P2PAGER

IFE FTP2PAG,<
DEFINE	P2XCTR	(A,B)	<B>
>;NO P2PAGER

;SIZE OF PHYSICAL MEMORY IN DECIMAL K (1024) ;⊗

IFN FTSUAI,<
IFE FTMGS,<
XD PHYMEM,10000/2	;2048K ARM-10M only
>;IFE FTMGS
IFN FTMGS,<
XD PHYMEM,11000/2	;256K MG + 2048K ARM-10M
>;IFN FTMGS
>;IFN FTSUAI
IFN FTCCRMA,<
XD PHYMEM,=512		;CCRMA HAS THIS MUCH SO FAR
>;IFN FTCCRMA
IFN FTLLL,<
XD PHYMEM,=1024		;LLL HAS THIS MUCH SO FAR
>;IFN FTLLL

XD GOODPG,PHYMEM*2	;MAX NUMBER OF "GOOD" PAGES OF MEMORY
			;(PARSER LIMITS CORESCAN TO "GOOD" PAGES)
			;CORE ALLOCATION IS LIMITED TO "GOOD" PAGES

IFG GOODPG-PHYMEM*2,<.FATAL YOU DON'T HAVE THAT MUCH MEMORY!>

;SEE ALSO THE TABLE MEMCON FOR MEMORY CONFIGURATION IN ALLDAT

XD P3PGS,=64*2			;64K OF OLD AMPEX IS ON P3 AND THE C1 DISK CHANNEL
XD P3BASE,17*1000		;FIRST PAGE OF P3 MEMORY FOR THE MAPPIPLEXOR

IFN FTHSYS,<IFE FTXCOR,<.FATAL FTXCOR=0 AND FTHSYS NON ZERO>>

XD SPCPGL,0	;NO SPECIAL PAGE TABLE ENTRIES FOR NOW

XD P2BASE,4000		;PHYSICAL PAGE NUMBER OF P2'S MEMORY ON P1'S MEM BUS
XD P2SIZE,=128*2	;NUMBER OF PAGES IN P2'S MEMORY
XD P2XNUM,4		;NUMBER OF PAGES OF XGP BUFFER SHARED BY P1 AND P2
XD P2XBPG,6		;P2 PAGE NUMBER OF FIRST XGP BUFFER PAGE
;MNEMONICS FOR DDB WORDS, TTYTAB BITS ;⊗ COMBIT DLYBIT PAUSEB KILTTY KILDPY

; SOME BITS IN TTYTAB, USED EVERYWHERE IN THE WORLD
COMBIT←←400000		;COMMAND WAITING BIT
			;"COMMAND" ONLY SERVICES TTY WHEN COMBIT IS SET!
DLYBIT←←200000		;DELAYED COMMAND BIT
PAUSEB←←100000		;COMMAND WAITING FOR OUTPUT BUFFER TO EMPTY
KILTTY←← 40000		;This tty DDB should be killed with dpy header by DPYKIL
KILDPY←← 20000		;This tty's DPY HDR should be killed w/o killing the DDB
;TALKLINK←←177		;Number of next TTY in talk ring (or self)


; DEVICE DATA BLOCK DEFINITIONS

	XD STTIBF,60		;SIZE OF SYSTEM TTY INPUT BUFFER (WAS 30)
	XD STTOBF,36		;SIZE OF SYSTEM TTY OUTPUT BUFFER (BH WAS 30)
	XD UTTYBF,30		;SIZE OF USER TTY BUFFER
	XD OBYTSZ,11		;BITS PER TTY OUTPUT BYTE
	XD LPP,=24		;NUMBER OF LINES ON A SCOPE
	XD WPL,=17		;NUMBER OF WORDS TO A LINE ON SCOPE
	XD LINLGD,WPL*5-3	;NUMBER OF CHRS ALLOWED

; DEVICE DATA BLOCK NAMES
	XD DDBSKW,3		; NUMBER OF WORDS IN FRONT OF DDB CURRENTLY USED

IFN FT8UNI,<
	XD DEVUNI,-3		;Word where unit number goes
	XD PUNITP,0		;Number of bits to right of unit field in DEVUNI
	XD PUNITS,8		;Number of bits in unit field
>;IFN FT8UNI
	XD DEVJBN,-3		;Word where job number goes
	XD DEVSPT,-2		;POINTER TO IOS (WILL BE DEVIOS EXCEPT FOR P2 DEVS)
	XD DEVCMR,-1		; MORE DEVICE CHARACTERISTICS
	XD DEVNAM,0		;NAME IN SIXBIT ASCII
				;C(LH)=DEVICE MNEMONIC
				;C(RH)=DEVICE NUMBER, LEFT JUSTIFIED
	XD DEVCHR,1		;CHARACTERISTIC
	XD HUNGCT,100
				; BITS 6-11 = HUNG DEVICE COUNT. SET WHEN
				;DEVICE BECOMES ACTIVE. DECREMENTED EVERY SECOND.
	XD HUNGST,1
				; BITS 12-17 = HUNG DEVICE COUNT
				;SETTING. 0 MEANS DEVICE CAN NEVER BE HUNG.
	XD PDVBSZ,22-7		;Byte size of buffer length field.
				;BITS 25-35=BUFFER SIZE
IFE FT8UNI,<
	XD PUNITS,7
	XD PUNITP,22-PUNITS
				;BITS 18-24=DEVICE NUMBER,BINARY(BYTE POINTER=PUNIT)
>;IFE FT8UNI
;;	XD DEVJBN,1		;WORD WHERE JOB NUMBER APPEARS
;;				;INITIALLY SAME AS DEVCHR
IFE FT8UNI,<
	XD DEVUNI,1		;WORD WHERE UNIT NUMBER APPEARS
				;INITIALLY SAME AS DEVCHR
>;IFE FT8UNI
	XD DEVIOS,2		;STATUS WORD.  SEE BELOW
	XD DEVSER,3
				; C(LH) = NEXT DEVICE DATA BLOCK
				;C(RH)=DEVICE SERVICE DISPATCH TABLE
;    DEVICE SERVICE DISPATCH TABLE ASSIGNMENTS ;⊗
	XD DSETST,-5		;CALL BEFORE TRYING TO DO SETSTS UUO.
	XD DGIVDD,-4		;RETURN DDB (SHARABLE)
	XD DGETDD,-3		;MAKE DDB (")
	XD DINI,-2		;DEVICE INITIALIZATION
	XD DHNG,-1		;DEVICE IS HUNG
	XD DRL,0		;RELEASE
	XD DCL,1		;CLOSE
	;IMMEDIATE ADDRESS PART OF CLOSE UUO
		XD CLSOUT,1	;INHIBIT CLOSING OUTPUT
		XD CLSIN,2	;INHIBIT CLOSING INPUT
	XD DOU,2		;OUTPUT
	XD DIN,3
				; INPUT, SHORT DISPATCH TABLE
	XD DEN,4		;ENTER
	XD DLK,5		;LOOKUP
	XD DDO,6		;DUMP MODE OUTPUT
	XD DDI,7		;DUMP MODE INPUT
	XD DSO,10		;SETO
	XD DSI,11		;SETI
	XD DGF,12		;GETF UUO
	XD DRN,13		;RENAME
	XD DCLI,14		;CLOSE INPUT
	XD DCLR,15
				; CALL D,[SIXBIT /UTPCLR/]
	XD DMT,16		;MTAPE
		;END OF LONG DISPATCH TABLE
; DEVICE CHARACTERISTICS WORD DEFINITIONS ;⊗

	XD DEVMOD,4
				; BITS 6-11 = LEFT HALF OF IMAGE MODE BYTE POINTER
				;BIT 35-J=1 IF MODE J IS LEGAL FOR THIS DEVICE
				;BIT 18 DEVICE ASSIGNED BY CONSOLE COMMAND
				;BIT 19 DEVICE ASSIGNED BY PROGRAM (INIT)

;RIGHT HALF OF DEVICE CHARACTERISTICS WORD(DEVCHR UUO)
	XD ASSCON,400000	;ASSIGNED BY CONSOLE COMMAND ASSIGN
		;NOTE: READ CODE BETWEEN SYS1 & IOGO BEFORE CHANGING ASSCON
	XD ASSPRG,200000
				; ASSIGNED BY PROGRAM (INIT UUO)
;LEFT HALF DEVICE CHARACTERISTICS(DEVCHR UUO)
	XD DVOUT,1		;OUTPUT DEVICE
	XD DVIN,2		;INPUT DEVICE
	XD DVDIR,4		;HAS A DIRECTORY
	XD DVTTY,10		;IS A TTY
	XD DVMTA,20		;IS A MAG TAPE(REWIND)
	XD DVAVAL,40
				; 1 IF DEVICE IS AVAILABLE TO THIS JOB
				;SET BY DEVCHR UUO
	XD DVDTA,100		;IT IS A DECTAPE
	XD DVPTR,200		;IS A PAPER TAPE READER
	XD DVPTP,400		;IS A PAPER TAPE PUNCH
	XD DVLNG,1000
				; INDICATES DEVICE HAS A LONG DISPATCH TABLE
				;(OTHER UUOS BESIDES INPUT,OUTPUT,CLOSE,RELEASE)
	XD DVIMP,2000		;IS AN ARPA INTERGALLACTIC MASSAGE POSTERIOR
	XD DVTV,4000		; IS A TV CAMERA
	XD TTYATC,20000		;TTY ATTACHED TO JOB IF 1
	XD DVLPT,40000		;IS A LPT (CARRIAGE CONTROL IN FORTRAN)
	XD DVUDP,100000		; IS A USER DISK PACK
	XD DVDSK,200000		;IS A DISK
	XD DVDIRIN,400000	;DECTAPE DIRECTORY IN CORE IF 1
; DDB ASSIGNMENTS, DEVCMR BITS ;⊗

	XD DEVLOG,5		;LOGICAL NAME FOR JOB DEVICE
	XD DEVBUF,6
				; C(LH) = RE. ADR. OF 3 WORD OUTPUT BUFFER HEADER
				;C(RH)=REL. ADR. OF 3 WORD INPUT BUFFER HEADER
	XD DEVIAD,7		;C(RH)=REL. INPUT BUFFER ADD. SERVICE ROUT. IS FILLING
	XD DEVOAD,10		;C(RH)=REL. OUTPUT BUFFER ADR. SERVICE ROU. IS EMPTYING
;FOR LONG DISPATCH TABLE DEVICES ONLY:
	XD DEVFIL,11		;FILE NAME IN SIXBIT
	XD DEVEXT,12		;LH=EXTENSION, RH=UNUSED
	XD DEVPPN,13		; PROJ-PROG NUMBER
	;Note:  DSKDDB uses 14 for this, and that is what WHO looks at. TVR/May81
; LH OF DEVICE CHARACTERISTICS EXTENSION WORD, DEVCMR
	XD DEVIBF,400000	;MEANS DEVICE HAS AN INTERNAL SYSTEM BUFFER
				; AND DOES NOT SET IOACT, BUT SETS DEVSBB
	XD DEVAOA,200000	; MEANS THAT THE DEVICE SERVICE ROUTINE MAY BE
				; CALLED EVEN IF IO IS ACTIVE
	XD DEVSHR,100000	;SHARABLE - MUST GET/RELEASE NEW DDBS
	XD DEVLUP,40000		;REQUIRES LOCAL-USER STATUS TO INIT OR ASSIGN
	XD DEVMAS,20000		;MUST ASSIGN DEVICE FIRST BEFORE DOING INIT
				;ALSO OK IF USER HAS DEV INITED ALREADY
	XD DEVSTS,10000		;CALL DEVICE SERVICE FROM SETSTS UUO
	XD DEVP2,4000		;P2 MUST BE UP TO RUN THIS DEVICE (P2SYS)
	XD DEVP2H,2000		;P2 DEVICE WANTS TO BE HUNG TIMEOUTED
	XD DEPCBC,1000		;Device I/O service Provides Correct Byte Count
; I/O STATUS WORD ASSIGNMENTS ;⊗
;DATA MODES: BITS 32-35(BYTE POINTER=PIOMOD)
	XP A,0			;ASCII
	XD AL,1			;ASCII LINE
	XP I,10			;IMAGE
	XD IB,13		;IMAGE BINARY
	XP B,14			;BINARY
	XD SD,15		;SCOPE DUMP MODE
	XD DR,16		;DUMP BY RECORDS
	XP D,17			;DUMP ACROSS RECORDS
; STATUS BITS
;RIGHT HALF (USER)
	XD IOWC,20
				; DON'T COMPUTE WORD COUNT
	XD IOCON,40		;CONTINUOUS (CONT=0)
	XD IONRCK,100		;MTA - READ WITHOUT REREAD CHECK
				;LPT - NO CHAR. CONVERSION
				;PTP - DON'T COMPUTE PARITY
				;XGP - OVERLAPPED MODE
				;AD - CONTINUOUS, OVERLAPPED DUMP MODE
				;DSK - USET REFERENCES USE PHYSICAL RECORD NUMBERS
	XD HNGTRP,200		;LPT,XGP - USER WANTS ERROR RETURN ON HUNG PRINTER

;BITS 27,28	DENSITY OF MAG TAPE
;		00=INSTALATION STANDARD
;		01=200 BPI
;		10=556 BPI
;		11=800 BPI
	XD IOPAR,1000		;MTA - BCD MODE, WRITE EVEN PARITY
				;LPT - SUPPRESS FORM FEEDS AT CLOSE AND RELEASE
	XD IOTEND,2000		;MTA - END OF TAPE
	XD IOBOT,4000		;MTA - BEGINNING OF TAPE
	XD IOACT,10000		;DEVICE ACTIVE
	XD IODEND,20000		;DATA END ENCOUNTERED
	XD IOBKTL,40000		;BLOCK TOO LARGE
	XD IODTER,100000	;DATA ERROR
	XD IODERR,200000	;DEVICE ERROR
	XD IOIMPM,400000	;IMPROPER MODE, DETECTED BY THE SERVICE ROUTINE

; LEFT HALF (SYSTEM)
	XD IOW,1		;I/O WAIT
	XD IOBEG,2		;VIRGIN DEVICE
	XD IOFST,4		;NEXT ITEM WILL BE THE FIRST ITEM OF A BUFFER
	XD IO,20		;OUT=1, IN=0
	XD IOEND,40		;SERVICE ROUTINE HAS TRANSMITTED LAST DATA
	XD DEVSBB,1000		;MEANS INTERNAL SYSTEM BUFFER IS BUSY
;OTHER LH BITS ARE DEVICE DEPENDENT EXCEPT BIT 14 WHICH IS KEPT IN RESERVE.
;LEFT HALF USRJDA (JOB DEVICE ASSIGNMENTS) UUO'S FOR THIS CHANNEL SINCE LAST INIT ;⊗
	XD INITB,400000
				; INIT - SAVEGET DEPENDS ON THIS BEING THE SIGN BIT
	XD IBUFB,200000
				; INIT WITH INPUT BUFFER HEADER SPECIFIED
	XD OBUFB,100000
				; INIT WITH OUTPUT BUFFER HEADER SPECIFIED
	XD LOOKB,40000		;LOOKUP
	XD ENTRB,20000		;ENTER
	XD INPB,10000		;INPUT
	XD OUTPB,4000		;OUTPUT
	XD ICLOSB,2000		;INPUT CLOSE
	XD OCLOSB,1000		;OUTPUT CLOSE
	XD INBFB,400		;INBUF
	XD OUTBFB,200		;OUTBUF
	XD SYSDEV,100		;THIS DEVICE IS A SYSTEM TAPE, OR UFD 1,3
				;PROJ.PROG. NO 1,3 ON DSK
				;RELEASE CLEARS THEM ALL
; JOB BUFFER AREA HEADER ;⊗
	XD JBFADR,0
				; BIT 0 = 1 IF THIS BUFFER RING HAS NEVER BEEN
				;REFERENCED FROM THE USER'S PROGRAM BY
				;AN INPUT OR OUTPUT COMMAND.
				;BITS 1-17=UNUSED
				;BITS 18-35=CURRENT BUFFER ADDRESS
	XD JBFPTR,1
				; BYTE POINTER TO NEXT BYTE-1
	XD JBFCTR,2		;POSITIVE ITEM COUNT
; JOB BUFFER HEADER
	XD IOUSE,400000
				; 1 IF BUFFER IF FULL, OR BEING EMPTIED
				;0 IF BUFFER IS EMPTY (OR BEING FILLED)
				;BITS 1-17=BUFFER SIZE
				;BITS 18-35=NEXT BUFFER ADDRESS
;JOB STATUS WORD - JBTSTS - BIT ASSIGNMENTS ;⊗

	XD RUN,400000		;USER WANTS JOB TO RUN (MUST BE SIGN BIT)

	XD CMWB,200000		;JOB TYPED A COMMAND WHICH NEEDS CORE
				;WHICH IS ON DISK.  SET BY COMMAND DECODER
				;CLEARED WHEN JOB IN CORE AGAIN.

	XD JACCT,100000		;ACCOUNTING PGM RUNNING HERE, LOGIN OR LOGOUT

	XD JNA,40000		;THIS JOB NUMBER IS ASSIGNED, JOB IS INITIALIZED

	XD JERR,20000		;SYSTEM ERROR (PLDOV,ILM...)IN JOB. CAN'T CONTINUE.

	XD JLOG,10000		;JOB SUCCESSFULLY LOGGED IN

	XD LOKSWP,4000		;SWAP JOB INTO LOCKED CORE

	XD SWP,2000		;0 IF JOB IN CORE, 1 IF SWAPPED OUT OR ON WAY

	XD JSEG,1000		; MEANS THAT THIS IS NOT A JOB BUT IS
				; REALLY A HIGH SEGMENT WITH NO JOB DATA AREA

	XD CLKR,400		;THIS JOB HAS A CLOCK REQUEST IN
				;NEEDED SO ONLY ONE REQUEST PER JOB

	XD JWSIZ,5		;SIZE OF WAIT CODE
	XD JWPOS,=14		; RIGHT MOST BIT POSITION OF WAIT CODE
	XD WTMASK,370		; MASK FOR CLEARING WAIT CODES
	;BITS 10-14 USED TO INDICATE JOB IN WAIT FOR A SHARABLE DEVICE
	;0 MEANS JOB NOT WAITING FOR SHARABLE DEVICE
	;SEE SCHEDULER(CLKCSS) FOR DEFINITION OF WAIT CODES

	XD JHLDIN,2		; SET TO KEEP JOB IN CORE
				; CLEARED BY CLRSIN WHEN JBTSIN=0 FOR THE
				; "OTHER" SEGMENT.

	XD JWP,1		; IF JSEG IS ON, THEN THIS BIT MEANS THAT
				; THIS UPPER SEGMENT IS WRITE PROTECTED
	XD JWPPOS,=17		;BIT POSITION OF JWP

; RH BITS IN JBTSTS . . .

	XD SAVJDA,400000	; MEANS THAT JOBDATA AREA IS SAVED IN JBTPDL.

	XD JLOCK,100000		;JOB IS LOCKED IN CORE AFTER A LOCK UUO.
	XD SDEADIN,040000	; CORE DEADLOCK DETECTOR HAS A CLOCK REQUEST IN

	XD SDEAD1,020000	; DEADLOCK CONDITION STILL EXISTS IF SDEADIN STILL ON.

;BITS 24-35 ARE THE NUMBER OF THE HIGH SEGMENT THIS JOB HAS, ZERO IF NONE

	XD STOPIO,SWP+CMWB	;FORCE JOB TO STOP FOR SWAP OR COMMAND

	XD RUNABLE,RUN+JNA	; BITS NEEDED FOR A JOB TO BE RUNABLE

	XP RUNMSK,JLOG!CLKR!CMWB!JACCT!JHLDIN
				;BITS WHICH DO NOT MATTER FOR RUNABILITY
;JBTSIN SWAP IN LIST BITS ;⊗

	XD INTSNB,400000		;INTERRUPT HANDLER
					;CALL INTRUN AT FININ
	XD BATSNB,200000		;PHANTOM STARTUP
					;CALL BATSW AT FININ
	XD COMSNB,100000		;DELAYED COMMAND
					;CALL COMMAND AT FININ
	XD JRDSNB,40000			;JOB READ
					;CALL JRSRCH AND JRDWIN AT FININ
	XD SPWSNB,20000			;FS OR LOCK FORCED SPACEWAR USER OUT
					;TURN BIT OFF AT FININ

XD JALSIN,INTSNB!BATSNB!COMSNB!JRDSNB!SPWSNB	;Mask of ALL of the above bits

;BITS (35-JOBNSZ-JOBNSZ+1) THRU (35-JOBNSZ) BACKWARD LINK IN SWAP IN CHAIN
;BITS (35-JOBNSZ+1) THRU 35 ARE FORWARD LINK IN SWAP IN CHAIN

;BITS IN JBTSIN WHICH MAY HAVE TURNED ON JHLDIN IN JBTSTS FOR ANOTHER JOB
XD HLDSNB,INTSNB!COMSNB

	;JOBS ENTERED AT END OF LIST, SWAPPED IN FROM FRONT
;JBTST2	TWO PROCESSOR INTERLOCKED SPACEWAR STATUS BITS ;⊗

;JBTST2 IS USED FOR COMMUNICATING FROM THE SPACEWAR
;SERVICE ROUTINE TO THE REST OF THE SYSTEM.  THE BITS IN
;IT ARE DEFINED AS FOLLOWS:

;LH BITS
	XD SPWRUN,400000	;THIS JOB HAS A SPACEWAR MODULE ACTIVE.
	XD SPWGRT,200000	;"I AM THE GREATEST", TO BE DEFINED LATER.
	XD SPWSUS,100000	;THE MONITOR WANTS THIS JOB TO STOP FOR SOME
				;GOOD REASON (LIKE TO SHUFFLE IT).  GIVE THE
				;SPACEWAR MODULE ONE MORE QUANTUM WITH A WARNING
				;THAT IT WILL BE A WHILE UNTIL IT IS RUN AGAIN
	XD SPWST1,40000		;THIS JOB HAS BEEN WARNED AND IS STOPPED ON P1
	XD SPWERB,20000		;SPACEWAR MODULE HAS BEEN TERMINATED BY AN ERROR.
				;BITS 18-35 ARE THE PC AT THE TIME OF THE ERROR.
	XD SPWSU1,10000		;SUSPENSION WARNING HAS BEEN GIVEN TO JOB ON P1
				;THE ROUTINE WHICH IS ENTERED WHEN A SPW JOB DOES
				;A UUO (TERMINATES) ACTUALLY DOES THE SUSPENSION.
	XD SPWST2,4000		;SAME AS SPWST1 FOR P2
	XD SPWSU2,2000		;SAME AS SPWSU1 FOR P2
	XD SPWNT1,1000		;NO TIMEOUT FOR P1
	XD SPWNT2,400		;NO TIMEOUT FOR P2

;BITS 10-11 ARE NOT USED AS YET
				;ERROR BITS:  SWPERB SET FOR ANY OF THESE.
	XD UUOSPW,40		;ILLEGAL UUO FROM SPACEWAR
	XD ILLTMO,20		;TIMEOUT FROM SPACEWAR
	XD ILMSPW,10		;ILL MEM REF FROM SPACE WAR MODE
	XD NXMSPW,4		;NXM FROM SPACE WAR MODE
	XD POVSPW,2		;PDLOV FROM SPACE WAR MODE
	XD CNSSPW,1		;CONS TRAP FROM SPACE WAR MODE
;PRIVILEGE BITS (IN JBTPRV AND JB2PRV) ;⊗ ENPASS ENACTV FREPRV

; PRIVILEGE BITS ARE KEPT FOR EACH JOB IN JBTPRV AND JB2PRV.  JBTPRV CONTAINS
; THE "ACTIVE PRIVILEGES" WHICH ARE CURRENTLY ENABLED.  JB2PRV CONTAINS THE
; "PASSIVE PRIVILEGES" WHICH THE USER MAY ENABLE AND SOME "PERMANENT"
; PRIVILEGES SUCH AS LUP, LIV, AND USER GROUPS.  JB2PRV IS SET BY THE LOGIN AND
; SETTPV UUOS.  LOGIN AND ACCESS DETERMINE WHAT PRIVILEGES TO SET FROM DATA
; THAT IS KEPT WITH THE USER'S PASSWORD.
; 
; SETPRV ALLOWS A JOB TO CHANGE ITS PRIVILEGES.  SETPRV WITH AN ARGUMENT OF -1
; RETURNS THE CURRENT SET OF PRIVILEGES IN THE USER'S AC; ANY OTHER ARGUMENT
; IS INTERPRETED AS AN ATTEMPT TO CHANGE PRIVILEGE BITS.  SUCH ATTEMPT IS
; SUCCESSFUL IF JACCT IS SET IN JBTSTS, THE DESIRED PRIVILEGES ARE SET IN
; JB2PRV, OR THE PRIVILEGES ARE "FREE" (IE, AVAILABLE TO ANY USER).  THE
; RESULTING PRIVILEGE BITS ARE RETURNED IN THE AC, AS AN INDICATION OF
; SUCCESS OR FAILURE.
; 
; THE CURRENTLY IMPLEMENTED SET OF PRIVILEGES ARE::
; 
; NAME	BIT	FUNCTION
; DAW	1	ALLOWS ACCESS TO MTAPE WRITES ON THE DISK
; PRO	2	ALLOWS ACCESS RENAME FILES
; REA	3	ALLOWS ACCESS READ FILES
; WRT	4	ALLOWS ACCESS WRITE FILES
; AAO	5	ALLOWS USER TO ACCESS ALIAS PPN AS IF OWNER
; UPG	6	ALLOWS UPGSEL TO SELECT OTHER III'S, ALSO DD DIDDLING
; MES	7	CAN SEND MESSAGES TO BUSY CONSOLES
; DEV	9	CAN DETACH DEVICES FROM SYSTEM
; SSL	11	ALLOWS SETTING SYSTEM SL RESERVATION TABLE
; ACW	12	ABSOLUTE WRITES IN CORE THROUGH SETPR2
; INF	13	ALLOWS ACCESS TO PASSWORD DATA
; XGP	16	ALLOWS CALL ['XGPUUO']
; LUP	17	"LOCAL USER"
; ATT	18	ALLOWS ATTACH TO PHANTOMS
; LIV	19	CAN NEVER BE AUTOLOGGED OUT (CAN BE DETACHED)
; DET	20	USER PREFERS AUTODETACH TO AUTOLOGOUT

DEFINE PRIVS
<
;	LEFT HALF
XLPRIV DAW,200000	;DISK ABSOLUTE WRITE 
;  NEXT THREE MUST BE 100000, 40000, AND 20000 UNLESS DSKSER IS CHANGED!!!
XLPRIV PRO,100000	;FILE SYSTEM RENAME PRIV
XLPRIV REA,40000	;FILE SYSTEM READ PRIV
XLPRIV WRT,20000	;FILE SYSTEM WRITE PRIV
XLPRIV AAO,10000	;ACCESS ALIAS AS OWNER
XLPRIV UPG,4000		;SELECT OTHER DPYS WITH UPGIOT
XLPRIV MES,2000		;CAN DO TTYMES ARBITRARILY
XLPRIV DEV,400		;CAN USE DET/ATT DEVICE COMMAND
XLPRIV SSL,100		;CAN SET SERVICE LEVEL RESERVATION TABLE
XLPRIV ACW,40		;CAN DO ABS MODE WRITE USING SETPR2
XLPRIV INF,20		;CAN READ AND WRITE SPECIAL FILE INFO
XLPRIV DOV,10		;DOVER SPOOLER (see SCHEDU)
XLPRIV NSL,4		;NEGATIVE SERVICE LEVEL
XLPRIV XGP,2		;THIS IS THE XGP FONT COMPILER
XLPRIV LUP,1		;LOCAL USER PRIVILEGE

XRPRIV ATT,400000	;ALLOWS ATTACH TO PHANTOMS
XRPRIV LIV,200000	;DEFEATS AUTOLOGOUT, LOOKED FOR BY SPY
XRPRIV DET,100000	;DEFEATS AUTOLOGOUT, LOOKED FOR BY SPY
IFN FTGRP,<
XRPRIV CSP,40		;COMPUTER SCIENCE PERSONNEL
XRPRIV ACT,20		;ACCOUNTING FILES GROUP
XRPRIV DEC,10		;DEC PROPRIETARY SOFTWARE FILES GROUP
XRPRIV SCY,4		;SECRETARY GROUP
XRPRIV SYS,2		;SYSTEMS PROGRAMMERS GROUP
XRPRIV MAS,1		;[1,YOURSELF] GROUP (MUST BE A RH PRIV FOR DSKSER)

;If you add new group privileges you should also fix the following programs:
;LOGIN, PRIV, UFD, CRDIR, FTPSER, PRVLST, ACCESS

>;IFN FTGRP

>;PRIVS

↓NXPRIV ←← -1

DEFINE XLPRIV $ (NAM,VAL)
<XD NAM$PRV,VAL
↓NXPRIV ←← NXPRIV-<NAM$PRV,,0>
>

DEFINE XRPRIV $ (NAM,VAL)
<XD NAM$PRV,VAL
↓NXPRIV ←← NXPRIV-<NAM$PRV>
>

;DEFINE BITS
PRIVS

;THESE ARE THE RESTRICTED PRIVILEGES FOR ENABLE COMMAND
↓ENPASS←←<NSLPRV!LUPPRV,,LIVPRV!DETPRV>	;PRIVS TO BE ENABLED IN PASSIVE PRIVS
↓ENACTV←←<UPGPRV,,0>			;PRIVS TO BE ENABLED IN ACTIVE PRIVS
↓FREPRV←←<NSLPRV!UPGPRV,,LIVPRV!DETPRV>	;FREE PRIVS SETTABLE BY SETPRV UUO
;STATISTICS VARIABLES (FTSTAT) ;⊗

IFN FTSTAT,<

;LENGTH OF STATISTICS TABLE
XD STATLEN,600

;OPCODES FOR VARIOUS STATS
XD CSZSTA,000000	;BYTE(1)0(2)0(9)CORE PAGE COUNT(6)J#
XD NAMSTA,400000	;BYTE(1)1(5)0(6)UNUSED(6)J#	JOB NAME FOLLOWS IN 2 BYTES
XD QUESTA,410000	;BYTE(1)1(5)1(6)QUEUE CODE(6)J#
XD SINSTA,420000	;BYTE(1)1(5)2(6)JBTSIN BIT #(6)J#
XD SEGSTA,430000	;BYTE(1)1(5)3(6)SEGMENT #(6)J#
XD SPWSTA,440000	;BYTE(1)1(5)4(6)0-17:TICS OF SPW, 77:SPW OFF(6)J#
XD GLUSTA,450000	;BYTE(1)1(5)5(6)JBTGLU COUNT(6)J#
XD LOKSTA,460000	;BYTE(1)1(5)6(6)0:UNLOCKING, 1:LOCKING, 2:LOKSWP(6)J#
XD FITSTA,470000	;BYTE(1)1(5)7(6)1:WANT TO LOCK(6)J#	;FIT←J
XD HPGSTA,500000	;BYTE(1)1(5)10(6)UNUSED(6)J#	;NEXT BYTE IS # HI PAGES
XD JOBSTA,510000	;BYTE(1)1(5)11(6)UNUSED(6)J#	;NEXT JOB TO RUN
XD TIMSTA,520000	;BYTE(1)1(5)12(12)TIME		;HIGH ORDER TIME.
							;NEXT BYTE IS LOW ORDER TIME
XD SWPSTA,530000	;BYTE(1)1(5)13(6)1:OUT, 0:IN (6)J#	;SWAP OP STARTS
				;2 - FORCE SET, 3-CONSIDERED FOR SWAPOUT
				;4 - DEADLOCKED, 5 - RESCNIN, 6 - NOFIT
XD CORSTA,540000	;BYTE(1)1(5)14(6)UNUSED(6)UNUSED;NEXT BYTES ARE:
				;LOFREE, HIFREE, HIUSED, LOKTOT, CORMX, CORHMX
>;IFN FTSTAT
; SYSTEM MACROS ;⊗

;MACRO TO PREVENT SCHEDULING, USED AT UUO LEVEL WHEN A
;REENTRANT ROUTINE IS CHANGING COMMON DATA NOT YET
;ASSIGNED TO A PARTICULAR JOB

DEFINE NOSCHED
<>

;MACRO TO ALLOW SCHEDULING ONCE MORE

DEFINE SCHEDULE
<>

;MACRO TO PREVENT CORE SHUFFLING, USED AT UUO LEVEL WHEN
;A ROUTINE SETS UP AN ABSOLUTE USER ADDRESS IN AN AC
;OTHER THAN PDP,PROG, OR JDAT. THE MAIN EXAMPLE IS A BLT
;FROM EXEC TO USER OR USER TO EXEC.

DEFINE NOSHUFF
<>

DEFINE SHUFFL
<>

DEFINE HIINI
<IFN FTHSYS,<TWOSEG
	SET XHLOCC,400000
	SET XLLOCC,0
	USE XLLOCC
	↓XHLOC ←← 0		;INITIALLY IN LOWSYS
	↓YHLOC ←← 0		;STACK FOR PSHSYS/POPSYS
	↓ZHLOC ←← 0		;SET TO NON-ZERO TO SUPPRESS WARNING AFTER PSHSYS
>>

DEFINE HISYS
<IFN FTHSYS,<
IFE ZHLOC,<
IFG XHLOC,<
PRINTX Warning: HISYS called while already doing HISYS
>
>
↑↑ZHLOC ←← 0
	USE	XHLOCC
IFL .-400000,<.FATAL ERROR IN HISYS>
	↑↑XHLOC ←← 1
>>

DEFINE LOSYS
<IFN FTHSYS,<
IFE ZHLOC,<
IFE XHLOC,<
PRINTX Warning: LOSYS called while already doing LOSYS
>
>
↑↑ZHLOC ←← 0
	USE	XLLOCC
IFG .-400000,<.FATAL ERROR IN LOSYS>
	↑↑XHLOC ←← 0
>>

;MACRO TO PUSH THE STATE OF HISYS/LOSYS
DEFINE PSHSYS <IFN FTHSYS,<↑↑YHLOC ←← YHLOC*2+XHLOC  ↑↑ZHLOC ←← 1>>
DEFINE POPSYS <IFN FTHSYS,<↑↑ZHLOC ←← 1
IFE YHLOC&1,<LOSYS>
IFN YHLOC&1,<HISYS>
↑↑YHLOC ←← YHLOC⊗-1>>

IFN FTF2,<
;MACROS FOR NON-KL SYSTEM TO CONVERT KL INSTRUCTIONS TO KA INSTRUCTIONS.
;HERE IS A LIST OF SYSTEM SOURCE FILE LOCATIONS WHERE SOME OF THESE
;INSTRUCTIONS APPEAR:
;CLKSER (DMOVE,ADJSP)
;DPYSER (ADJSP)
;TTYSER (DMOVEM,ADJSP)
;DLNSER (DMOVE,DMOVEM,ADJSP)
;DSKSER (ADJSP)
;NULSER (ADJSP)
;DDT (MACRO FLUSHING KLUDGE, TERMINATES MACROS BELOW)
REPEAT 0,<	;This stuff is just for making these instructions type out
		;their locations during the system assembly.
OPDEF .DMV [DMOVE]
OPDEF .DMVM [DMOVEM]
DEFINE DMOVE<
PRINTX DMOVE
	.DMV >
DEFINE DMOVEM<
PRINTX DMOVEM
	.DMVM >
>;REPEAT 0
;This macro actually redefines ADJSP to be a SUB or ADD.
DEFINE ADJSP(S,N)<
IFG N,<ADD S,[N,,N]>
IFL N,<SUB S,[-N,,-N]>
;PRINTX ADJSP S,N
>;ADJSP
DEFINE ADJBP(P,N)<
PRINTX ******** ADJBP P,N instruction on non-KL system. ****************
>;ADJBP
>;IFN FTF2
IFKL10,<
OPDEF ADJBP [IBP]	;Adjust byte pointer
OPDEF XJRSTF [JRST 5,]	;Use Flag/PC double word to restore flags and PC.
>;IFKL10
;MORE SYSTEM MACROS, OPDEFS ;⊗ VALCH3 VALCH4 VALCH5 VALCH6 VALCH7 D.CURSOR D.LEXFR D.PPXFR D.POG D.WHOWRT D.ERASE D.WSE D.PPSTAR NDDTYP

DEFINE CAT ! (A,B) <A!B>

IFN FTF2,<

OPDEF DCONO[740000,,0]		;DISK CONO IOT
OPDEF DCONI[741000,,0]		;DISK CONI IOT
OPDEF DCONSO[742000,,0]		;DISK CONSO IOT
OPDEF DCONSZ[743000,,0]		;DISK CONSZ IOT

;DEFS. OF TEMP. IOTS FOR THE DISK

OPDEF LA[723000,,0]
OPDEF RA[717000,,0]
OPDEF LC[721000,,0]
OPDEF RC[715000,,0]
OPDEF LE[724000,,0]
OPDEF LM[722000,,0]
OPDEF RM[716000,,0]

;OPDEFS FOR MAGTAPE IOTS

OPDEF MTOP[726000,,0]	;CONTROL FUNCTION IOT
OPDEF MTRS[727000,,0]	;READ STATUS IOT
OPDEF MTWR[731000,,0]	;WRITE SPECIFIED NUMBER OF WORDS IOT
OPDEF MTRD[732000,,0]	;READ SPECIFIED NUMBER OF WORDS IOT

; OTHER OPCODES UNIQUE TO THE F2

OPDEF XMOVEM[106000,,0]	; ABSOLUTE MOVE
OPDEF XMOVE[107000,,0]	; ABSOLUTE MOVE
	; TAKES ADDRESS (22 BITS?) IN AC+1 AND DATA IN AC
	; EFFECTIVE ADDRESS IS IGNORED

OPDEF PARSTS[750000,,0]	;READ PARITY ERROR REGISTER
>;IFN FTF2

OPDEF CLRBFI [TTYUUO 11,]
OPDEF INWAIT [TTYUUO 14,]
IFN FTCINS,<
IFE FTF2,< OPDEF CHKINS [104000,,0] >;IFE FTF2
IFN FTF2,< OPDEF CHKINS [104000,,20] >;IFN FTF2
			;JSYS instruction.  400000 is to prevent pager microcode
			;from referencing Exec memory when it does an XCTR, as F2
			;microcode has to do references to user ACs as a special
			;case, whereby it maps them into a spare Exec page. Sigh.
>;IFN FTCINS
OPDEF XCTR [XCT]

IFKL10,<
OPDEF .TRAP [46B8]		;(ANY MUUO WILL DO)
IFE FTKLB,<
OPDEF SETUS1 [BLKI 30,]		;SET MICROCODE STATE 1, for metering code pieces
OPDEF CLRUS1 [DATAI 30,]	;CLR			with perf analysis mtr
OPDEF SETU13 [BLKO 30,]		;SET MICROCODE STATES 1 AND 3, for metering cache
OPDEF CLRU13 [DATAO 30,]	;CLR			misses in given PI chan
>;IFE FTKLB

IFE FTREV8,<
DEFINE CHKPIS ! (G,CHN) <
IFIDN <G><GEN><
	CONI PI,.+6
	EXCH 17,.+5
	TDNE 17,[<1,,1>⊗<7-CHN>];SKIP IF NOT GEN INT AND CHANNEL IS OFF
	JRST .+4
	EXCH 17,.+2
JSR PILOST ;	JRST 12,@CH!CHN		;SORRY, YOU CAN'T INTERRUPT NOW
	.			;CONI THE PI, SAVE 17 HERE
	EXCH 17,.-1		;GEN OR CHANNEL ON, OK TO HOLD INTERRUPT
>;IFIDN
IFDIF <G><GEN><
	CONSO PI,1⊗<7-CHN>	;SKIP IF THIS PI CHANNEL IS ON
JSR PILOST ;	JRST 12,@CH!CHN		;PI CHANNEL IS OFF, GET OUT NOW!
>;IFDIF
>;DEFINE CHKPIS
>;IFE FTREV8
IFN FTREV8,<			;REV 8 FIXES THE BUG WHERE CONO PI,CHNOFF STILL
DEFINE CHKPIS (G,CHN) <>
>;IFN FTREV8			;LETS THAT CHANNEL INTERRUPT.

DEFINE CLRPCP (A) <
IFIDN <A><><
	MOVEM 17,.+6		;SAVE AN AC IN LINE
	JSP 17,.+1		;GET PCP FLAG IN SIGN BIT
	TLZ 17,PCPFLG		;CLEAR IT
	HRRI 17,.+2
	JRST 2,@17
	SKIPA 17,.+1		;GET THE AC BACK FROM NEXT LOC
	.
>
IFDIF <A><><
	MOVEM 17,A
	JSP 17,.+1
	TLZ 17,PCPFLG
	HRRI 17,.+2
	JRST 2,@17
	MOVE 17,A
>
>;DEFINE CLRPCP


IFE FTKLB,<
DEFINE MTRON (A)<
	PUSHJ P,MTRSET
	0,,A
>;DEFINE MTRON

DEFINE MTROFF (A)<
	PUSHJ P,MTRCLR
	0,,A
>;DEFINE MTROFF

VALCH3←←3
VALCH4←←4
VALCH5←←5
VALCH6←←6
VALCH7←←7

IFE FTMTRACT,<
DEFINE MTRCON (A,P2NOCK)<
IFDIF <A><CH2><
	MOVEM TAC,CAT(A,MSV)	;CH3MSV, ETC
	MOVE TAC,MTRCOD
	CAIN TAC,CAT(VAL,A)
	SETU13
	MOVE TAC,CAT(A,MSV)
>;A≠CH2
IFIDN <A><CH2><
	SKIPGE MTRCOD		;MTRCOD = -1 FOR CH2
	SETU13
>;A=CH2
>;DEFINE MTRCON

DEFINE MTRCOF (A,P2NOCK)<
IFDIF <A><CH2><
	MOVEM TAC,CAT(A,MSV)	;CH3MSV, ETC
	MOVE TAC,MTRCOD
	CAIN TAC,CAT(VAL,A)
	CLRU13
	MOVE TAC,CAT(A,MSV)
>;A≠CH2
IFIDN <A><CH2><
	SKIPGE MTRCOD		;MTRCOD = -1 FOR CH2
	CLRU13
>;A=CH2
>;DEFINE MTRCOF
>;IFE FTMTRACT

IFN FTMTRACT,<
DEFINE MTRCON (A,P2NOCK)<>
DEFINE MTRCOF (A,P2NOCK)<>
>;IFN FTMTRACT

>;IFE FTKLB

IFN FTKLB,<
DEFINE MTRON (A,P2NOCK)<>
DEFINE MTROFF (A,P2NOCK)<>
DEFINE MTRCON (A,P2NOCK)<>
DEFINE MTRCOF (A,P2NOCK)<>
;The SETUS1, etc., opcodes are left undefined to catch any refs to them
;that aren't conditionaled under FTKLB.
>;IFN FTKLB

>;IFKL10

NOKL10,<
DEFINE CHKPIS (G,CHN) <>
DEFINE CLRPCP (A) <>
DEFINE MTRON (A)<>
DEFINE MTROFF (A)<>
DEFINE MTRCON (A,P2NOCK)<>
DEFINE MTRCOF (A,P2NOCK)<>
>;NOKL10

DEFINE HGMAC(CODE)	<
IFN FTHG,<
	PUSH P,[CODE]
	POP P,HGCODE
>
>

;MACRO TO DEFINE TABLES FOR SECONDARY DISPATCH UUOS

DEFINE UUOMAC(TBL,BASUUO)
{TBL:	UUOS
{	UUOMC2 X
}UUOCNT ←← .-TBL
	BASUUO UUOCNT-1,UUOLNK
↑↑UUOLNK ←← .
	UUOS
{	<SIXBIT ,X,>
}}

DEFINE UUOMC2(A,B,C){B,,IFDIF<C><><C;>A}

↓UUOLNK ←← 0

;The SCNONJ and SCNFFJ routines called from these scanner macros are in DPYSER.
DEFINE ONSCN <
	PUSHJ P,SCNONJ
>
DEFINE OFFSCN <
	PUSHJ P,SCNFFJ
>

;MACRO TO TEST FOR SPACEWAR LEVEL AND JUMP TO SPWERR IF SO.
DEFINE ERRSPW <
	SKIPE SPWUUF		;IS SPACEWAR MODE SET?
	CONSZ PI,77400		;YES. BUT MUST NOT BE PI IN PROGRESS
	CAIA			;NOT REALLY SPACWAR.
	JRST SPWERR		;LET SPWSER HANDLE THIS.
>

;MACRO TO CHECK WHAT PI LEVEL WE ARE AT AND WHAT PIS ARE ON FOR SCANNER/DM SERVICES
DEFINE SCPICK <
	CONSZ PI,74000		;NOT SUPPOSED TO BE IN CHANNELS 1 TO 4
	JRST .+5		;OOPS!
	CONSZ PI,2000		;OK IF WE'RE IN CHANNEL 5
	JRST .+4		;OK
	CONSO PI,1000		;NOT IN CH 5, BETTER NOT BE IN CH6!
	CONSZ PI,4		;AND BETTER HAVE CH 5 OFF
	PUSHJ P,SCPIER		;ERROR!!!!!
>

;MACRO TO MAKE SURE RH OF LETAB ENTRY JUST DIDDLED ISN'T ZERO.
;(AC won't be zero, else indexing with it wouldn't work outside this macro.)
DEFINE LETABCHECK(AC) <
	PUSH P,AC-1
	MOVE AC-1,LETAB(AC)
	TRNN AC-1,-1
	PUSHJ P,LETBUG
	POP P,AC-1
>
	

;DD TASK TYPES
↑D.CURSOR←←0
↑D.LEXFR←←1
↑D.PPXFR←←2
↑D.POG←←3
↑D.WHOWRT←←4
↑D.ERASE←←5
↑D.WSE←←6
↑D.PPSTAR←←7
↑NDDTYP←←10	;Total number of task types

;MACRO TO SET UP TYPE OF DD TASK
DEFINE DDTIME!(TYPE)<
IFN FTDDTIME,<
	MOVEI AC2,D.!TYPE
>;IFN FTDDTIME
>

;Macro to plant a clock request.  Arg is address of word holding request.
DEFINE CLKENQ(ADR)<
	PUSHJ P,CQUEUE
	 JFCL ADR
>;CLKENQ

;To debug a PION/PIOFF problem, change the IFN 0's in SYSPIF/SYSPIN to IFN 1's.

;Macro to turn off PIs (sort of OK to skip over)
DEFINE SYSPIF<
	CONO PI,PIOFF	;turn off PIs
IFN 0,<
	JSR PIOFFS	;store address of last guy to turn PIs off
>;IFN 0
>;DEFINE SYSPIF

;Macro to turn on PIs (not OK to skip over)
DEFINE SYSPIN<
IFN 0,<
	SETZM PIOFFS	;forget who last guy was to turn PIs off
>;IFN 0
	CONO PI,PION	;turn on PIs
>;DEFINE SYSPIF
;; MACROS TO SYNCHRONIZE PROCESSORS ;⊗

	XD PSYNCN,4	; NUMBER OF CONTROL CELLS NEEDED

DEFINE SYNINI (A) <
	SETZM A
	SETZM A+1
	SETZM A+2
	SETZM A+3
>

DEFINE PSYNC1(A) <
	PUSHJ P,PWAIT
	 A
IFIDN <A><><JFCL>
>

DEFINE PSYNC (A) <
	PUSHJ P,PWAIT
	 MOVEI TAC,A
>

DEFINE XSYNC1(A) <
	PUSHJ P,XWAIT
	 A
IFIDN <A><><JFCL>
>

DEFINE XSYNC (A) <
	PUSHJ P,XWAIT
	 MOVEI TAC,A
>
;MACROS TO PUSH AND POP ACS, DISASTER MACROS ;⊗ FIXNUM FIXLEN

↓FIXNUM←←10		;NUMBER OF SECTORS TO READ AT A TIME IN SYSFIX
↓FIXLEN←←FIXNUM*40	;TOTAL NUMBER OF WORDS

DEFINE PUSHACS <
	PUSHJ P,PUSHIT
>
DEFINE POPACS <
	PUSHJ P,POPIT
>

DEFINE DEBCHECK(A) <
	SOSLE DEBCNT	;Call DDT after so many of these errors
	SKIPE DEBMODE	; even if DEBMOD isn't set.
	PUSHJ P,DISFLUSH
IFDIF <A><POPACS><IFDIF <A><NOPOPACS><.FATAL DEBCHECK called with arg not POPACS>>
IFIDN <A><POPACS><POPACS>	;POPACS here if requested.
	SKIPLE DEBCNT
	SKIPE DEBMODE
	PUSHJ P,WDDTCALL
>;The arg A is normally POPACS to remind wizards of what this macro does.
;;However, the arg can be NOPOPACS to suppress the POPACS.

;THIS MACRO IS FOR USE IN CALLING DISERR IN COMCSS
;EXAMPLE:
;	PUSHJ P,DISERR
;	DISARG STR,[ASCIZ/TAC=/]
;	DISARG OCT,TAC
;	DISARG STR,[ASCIZ/
;/]
;	-1
;WOULD TYPE:
;	TAC=000000000030
;
;IF TAC CONTAINED 30
OPDEF OPZERO[0]
DEFINE DISARG $ (A,B)
<	A$QQQ B
>
;QQQNAM must agree with QQQNAM in NETMAC.MAC for IP/TCP code.
DEFINE QQQNAM
<	ERRMAC STR
	ERRMAC OCT
	ERRMAC LOC
	ERRMAC DEC
	ERRMAC SIX
	ERRMAC DCP
	ERRMAC HE2
	ERRMAC OCH
	ERRMAC ADR
	ERRMAC OHS
IFN FTIP,<
	ERRMAC IPA
>;IFN FTIP
>
DEFINE ERRMAC $ (I)
<	OPDEF I$QQQ [QQQ⊗=23]
QQQ ←← QQQ+1
>
QQQ ←← 0

	QQQNAM
;PARAMETER ASSIGNMENTS FOR THIS SYSTEM. ;⊗

IFE FTF2,<
XD JOBN,=80	;NUMBER OF JOBS INCLUDING NULL JOB
>;IFE FTF2
IFN FTF2,<
XD JOBN,100	;NUMBER OF JOBS INCLUDING NULL JOB
>;IFN FTF2
XD JOBNDG,2	;NUMBER OF DECIMAL DIGITS IN BIGGEST JOB NUMBER (JOBN-1)
XD JOBNSZ,=36-∃(JOBN-1)	;NUMBER OF BITS IT TAKES TO HOLD BIGGEST JOB NUMBER (JOBN-1)
XD JOBNMK,1⊗JOBNSZ-1 ;MASK TO AND OUT A JOB NUMBER
XD JOBNPS,=11	;LOW ORDER BIT OF JOB NUMBER FIELD IN DDB (DEVJBN)
IFG JOBNSZ-JOBNPS-1,<.FATAL Max job number too big for field in DDB>
XD NSPMEM,=2000	;2 MICRO-SECONDS PER MEMORY CYCLE.
XD CLKPLN,200	;CLOCK PDL LENGTH
XD IOPDLN,2*23	;IO PUSH/POP STACK LENGTH, ENOUGH FOR ALL IO CHANNELS (ONCE)
XD NFIRES,2	;NUMBER OF NONSTANDARD PHANTOM REQUESTS ALLOWED PER TICK
XD IRMANO,5	;NUMBER OF IRMAS/MINUTE ALLOWED BEFORE AUTO DETACH

;Bits in SPLBTS below for various spoolers existing in the system.
;1(xgp),2(lpt),4(dover),10(boise),20(imprint),40(esp)
;100(rover),200(plover),400(strudel),1000(pancake),2000(lathrop)

IFN FTSUAI,<
;DEVICES THAT WE SUPPORT AT SAIL
XD PTRNUM,1	;PAPER TAPE READERS
XD PTPNUM,1	;PAPER TAPE PUNCHES
XD LPTNUM,0	;LINE PRINTERS
XD CDRNUM,0	;CARD READERS
XD TVNUM,0	;TV CAMERAS
XD DTCNUM,4	;DEC TAPE DRIVES
XD MTUNUM,2	;TU78 magtapes
XD MTCNUM,2	;MAG TAPES DRIVES
XD SCNNUM,60	;NBR OF SCANNER PORTS, NOT COUNTING THOSE FOR MICROSWITCH KBDS
XD VDSNUM,100	;NUMBER OF VIDEO SWITCH OUTPUTS
XD KBDNUM,VDSNUM ;NUMBER OF MICROSWITCH KEYBOARDS
XD DPYNUM,2	;NUMBER OF III DISPLAYS
XD DDNUM,VDSNUM-DPYNUM	;NUMBER OF DATA DISC TERMINALS
IFE FT8UNI,<
XD PTYNUM,200-SCNNUM-DPYNUM-DDNUM-1	;USE REMAINING 7-BIT NUMBERS FOR PTYS
>;IFE FT8UNI
IFN FT8UNI,<
XD PTYNUM,220-SCNNUM-DPYNUM-DDNUM-1	;LET PTYS GO UP TO THIS NUMBER (220)
		;Tell the SPY, ACCT[ACT,SYS] if top TTY number increases.
>;IFN FT8UNI
XD TCONLN,SCNNUM+DPYNUM+DDNUM	;LINE NUMBER OF CTY
XD PTYL0,TCONLN+1		;FIRST PTY LINE NO.
XD DPYL0,SCNNUM			;FIRST III LINE
XD DDL0,DPYL0+DPYNUM		;FIRST DD LINE
IFE FTVDIL,<
XD DILNUM,1	;AUTO DIALERS
>;IFE FTVDIL
IFN FTVDIL,<
XD DILNUM,7	;Dialable lines
>;IFN FTVDIL
XD ELFNUM,0	;NO. PERIPHERAL PROCESSORS (PDP-11'S) -- BO 6-MAY-74
XD CARNUM,1	;SET TO 1 FOR CART SERVICE
XD PLTNUM,0	;SET TO 1 FOR PLOT SERVICE (SEE PTPSER!)
XD PUPNUM,1	;PUP SUPPORT
XD DLNNUM,0	;DIALNET LINE
XD PKNUM,0	;PAGING KLUDGE
XD TVMAX,4	;number of TVs with audio
XD SPLBTS,3374	;Bits for spoolers (see above).
XD ARMNUM,0	;positive if have interlock devices ARM and GRN (see ELFSER)
XD XGPNUM,0	;(soon no more XGP, RIP)
>;IFN FTSUAI

IFN FTCCRMA,<
;DEVICES THAT WE SUPPORT AT CCRMA
XD PTRNUM,0	;PAPER TAPE READERS
XD PTPNUM,0	;PAPER TAPE PUNCHES
XD LPTNUM,1	;LINE PRINTERS
XD CDRNUM,0	;CARD READERS
XD TVNUM,0	;TV CAMERAS
XD DTCNUM,0	;DEC TAPE DRIVES
XD MTUNUM,0	;TU78 magtapes
XD MTCNUM,1	;MAG TAPES DRIVES
IFN FTGRIN,<
XD SCNNUM,4	;NBR OF SCANNER PORTS BEFORE THE GRINNELL/MICROSWITCH KBDS
>;IFN FTGRIN
IFE FTGRIN,<
XD SCNNUM,20	;NBR OF SCANNER PORTS BEFORE THE GRINNELL/MICROSWITCH KBDS
>;IFE FTGRIN
XD VDSNUM,0	;NUMBER OF VIDEO SWITCH OUTPUTS
XD KBDNUM,0	;NUMBER OF MICROSWITCH KEYBOARDS
XD DPYNUM,0	;NUMBER OF III DISPLAYS
IFE FTGRIN,<
XD DDNUM,0	;NUMBER OF DATA DISC TERMINALS
>;IFE FTGRIN
IFN FTGRIN,<
XD DDNUM,14	;NUMBER OF DATA DISC TERMINALS (GRINNELLS)
>;IFN FTGRIN
XD PTYNUM,17	;Can increase this if you want, but tell the SPY, ACCT[ACT,SYS].
XD TCONLN,SCNNUM+DPYNUM+DDNUM	;LINE NUMBER OF CTY
XD PTYL0,TCONLN+1		;FIRST PTY LINE NO.
XD DPYL0,SCNNUM			;FIRST III LINE
XD DDL0,DPYL0+DPYNUM		;FIRST DD LINE
XD DILNUM,0	;AUTO DIALERS
XD ELFNUM,0	;NO. PERIPHERAL PROCESSORS (PDP-11'S) -- BO 6-MAY-74
XD CARNUM,0	;SET TO 1 FOR CART SERVICE
XD PLTNUM,0	;SET TO 1 FOR PLOT SERVICE (SEE PTPSER!)
XD PUPNUM,0	;ETHERNET SUPPORT
IFNDEF DLNNUM,<	;This is still being tested.  Possibly defined in HEAD
XD DLNNUM,0	;DIALNET LINES
>;IFNDEF DLNNUM
XD PKNUM,0	;PAGING KLUDGE
XD TVMAX,0	;number of TVs with audio
XD SPLBTS,21	;Bits for spoolers (see above).
XD ARMNUM,0	;positive if have interlock devices ARM and GRN (see ELFSER)
XD XGPNUM,0	;no XGP
>;IFN FTCCRMA

IFN FTLLL,<
;DEVICES THAT WE SUPPORT AT LLL.
XD PTRNUM,0	;PAPER TAPE READERS
XD PTPNUM,0	;PAPER TAPE PUNCHES
XD LPTNUM,0	;LINE PRINTERS
XD CDRNUM,0	;CARD READERS
XD TVNUM,0	;TV CAMERAS
XD DTCNUM,0	;DEC TAPE DRIVES
XD MTUNUM,0	;TU78 magtapes
XD MTCNUM,1	;MAG TAPES DRIVES
XD SCNNUM,20	;NBR OF SCANNER PORTS
XD VDSNUM,0	;NUMBER OF VIDEO SWITCH OUTPUTS
XD KBDNUM,0	;NUMBER OF MICROSWITCH KEYBOARDS
XD DPYNUM,0	;NUMBER OF III DISPLAYS
XD DDNUM,0	;NUMBER OF DATA DISC TERMINALS
XD PTYNUM,17	;Can increase this if you want, but tell the SPY, ACCT[ACT,SYS].
XD TCONLN,SCNNUM+DPYNUM+DDNUM	;LINE NUMBER OF CTY
XD PTYL0,TCONLN+1		;FIRST PTY LINE NO.
XD DPYL0,SCNNUM			;FIRST III LINE
XD DDL0,DPYL0+DPYNUM		;FIRST DD LINE
XD DILNUM,0	;AUTO DIALERS
XD ELFNUM,0	;NO. PERIPHERAL PROCESSORS (PDP-11'S) -- BO 6-MAY-74
XD CARNUM,0	;SET TO 1 FOR CART SERVICE
XD PLTNUM,0	;SET TO 1 FOR PLOT SERVICE (SEE PTPSER!)
XD PUPNUM,0	;ETHERNET SUPPORT
IFNDEF DLNNUM,<	;This is still being tested.  Possibly defined in HEAD
XD DLNNUM,0	;DIALNET LINES
>;IFNDEF DLNNUM
XD PKNUM,0	;PAGING KLUDGE
XD TVMAX,0	;number of TVs with audio
XD SPLBTS,21	;Bits for spoolers (see above).
XD ARMNUM,0	;positive if have interlock devices ARM and GRN (see ELFSER)
XD XGPNUM,0	;no XGP
>;IFN FTLLL
; HERE, WE DEFINE THE LEGAL QUEUES AND QUANTUM TIMES ;⊗

;DISMIS UUO CRETINOUSLY FORCES PROGRAMS TO KNOW ABSOLUTE QUEUE NUMBERS.
DEFINE QUEUES
<	X (FUCK)	;THIS BECOMES QUEUE 0, WHICH IS ACTUALLY UNUSED
	X (ELF)		;FORMERLY SYSTEM TAPE WAIT, NOW ELF.
	X (DT)		;DECTAPE CONTROL WAIT (UP TO 8 DRIVES)
	X (DC)		;DATA CONTROL (DC) WAIT - MAGTAPE AND DECTAPE
	X (MT)		;MAGTAPE CONTROL WAIT (UP TO 8 UNITS)
>


;JOBS ARE UNRUNABLE WHEN IN THESE QUEUES (STATES)

DEFINE CODES
<	X (IOW)		;IO WAIT
	X (DIOW)	;IN-CORE IO WAIT
	X (DW)		; DEVICE WAIT
	X (NUL)		;NO CORE ASSIGNED
	X (STOP)	;STOP (CONTROL C)
	X (INTW)	; INTERRUPT WAIT
	X (SEG)		; UPPER SEGMENT WAIT
IFN FTDMDP,<
	X (PAGE)	;PAGE WAIT
>;IFN FTDMDP
>

DEFINE PQUES
<	X (RUN)		; GENERALIZED RUN QUEUE
	X (T)		; HI-PRIORITY RUN QUEUE
>

; QUANTUM TIME

	XD QQMQT,10	; MINOR QUANTUM TIME
	XD JIFSEC,=60	; NUMBER OF TICKS IN A SECOND
	XD JIFMIN,JIFSEC*=60	;NUMBER OF JIFFIES PER MINUTE.

	XD JLLENGTH,=20	; NUMBER OF PREVIOUS JOB LOAD FACTORS WE WILL KEEP
	XD JLTIME,2*JOBN	;MUST BE THIS BIG AT LEAST!  REG 1-22-74
IFG =60-JOBN,<XD JLTIME,=120>	;RECOMPUTE PRIORITIES EVERY 2.0 SECONDS
;	XD SWAPLIMIT,=90*2000 	;NOW DEFINED IN CORDAT AS A CORE CELL.
;DEVICE NAMES NOT IN THE ASSEMBLER.(IN INCREASING ORDER) ;⊗
		;AND WHEN YOU FINISH HERE, PUT IT IN DDT, RAID AND FACIL

	XD APR,0
	XD PI,4
IFKL10,<
	XD KLPAG,10     ;KL10 PAGER DEVICE
	XD CCA,14       ;KL10 CACHE CLEARER
	XD TIM,20       ;KL10 TIMER
	XD MTR,24       ;KL10 METER
>;IFKL10
	XD PAG,24       ;BBN PAGER (ON KA10)
IFE FTF2,<
	XD PTP,100
	XD PTR,104
	XD IOP,110      ;I/O PROCESSOR (167)
>;IFE FTF2
	XD CTY,120
	XD LPT,124
IFE FTF2,<
	XD C1A,140
	XD C1B,144
>;IFE FTF2
IFKL10,<
	XD DTE0,200     ;KL10'S 10/11 INTERFACE
>;IFKL10
IFE FTF2,<
	XD DC,204       ;DATA CONTROL (136)  NOTE THIS IS NOT THE NORMAL DEVICE CODE!
	XD DTC,210
	XD DTS,214
	XD MTC,220
	XD MTS,224
	XD MTM,230
	XD ADC,240      ; NEW AD CONVERTER (P2)
	XD DAC,244      ; NEW DA CONVERTER (P2)
>;IFE FTF2
IFN FTF2,<
	XD F2M,270	;F2 MAG TAPE (INTERRUPT MICROCODE)
>;IFN FTF2
IFE FTF2,<
IFE FTDLS,<
	XD DCA,320      ;DCA KEYBOARD SCANNER
>;IFE FTDLS
IFE P2SYS,<
	XD VDS,340      ;EARNEST VIDEO SWITCH
>;IFE P2SYS
IFN P2SYS,<
	XD P1D,340      ;P1/P2 INTERFACE DEVICE, ON P2
>;IFN P2SYS
;;	XD SIX,344      ;10/6 INTERFACE
	XD DDD,344      ;DATA DISC DISPLAYS
	XD PLT,344      ;NEW CALCOMP PLOTTER INTERFACE ON P2
	XD HOT,350      ;HEAPSHIT THERMOMETER INTERFACE
	XD VRN,350      ;VARIAN PLOTTER INTERFACE ON P2
	XD CAR,354      ;CART XMTR AND UDP UNLOAD LIGHT
	XD KIM,360      ;PARALYSER INTERFACE (BIT SERIAL LINE FROM KIM)
	XD VMI,364      ;VENDING MACHINE INTERFACE - NOT SUPPORTED BY SYSTEM
	XD PK,370       ;(TELEPHONE) PAGING KLUDGE
	XD DIL,374      ;AUTO DIALER
>;IFE FTF2
IFN FTDLS,<
	XD DLS,370	;DC-10 TYPE SCANNER
	XD XDLS,DLS+4	;BAUD RATE SETTING KLUDGE
>;IFN FTDLS
IFE FTF2,<
IFN FTAIP,<
	XD IMP,400      ;ARPA INTERGALLACTIC MASSAGE PROCESSOR
>;IFN FTAIP
	XD TV,404       ;TV CAMERA INTERFACE
;	XD ARM,420     ;MECHANICAL ARM
;	XD AD,424      ;A/D CONVERTER
	XD DPY,430      ;DISPLAY CONSOLES
;	XD KBD,434	;THEIR KEYBOARDS
	XD XGP,440      ;XEROX GRAPHICS PRINTER
;	XD DSK,444	;LIBRASCOPE DISK INTERFACE
	XD P2D,450      ;P1/P2 INTERFACE DEVICE, ON P1
	XD ELF,470      ;PDP11 DATA TRANSFER INTERFACE
;	XD PMP,500	;P. PETIT'S IBM CHANNEL
;	XD IBM,504	;	"
	XD MPX,530      ;MAPPIPLEXOR
>;IFE FTF2
IFN FTSAM,<
	XD SAMA,520     ;SAMSON MUSIC BOX
	XD SAMB,524     ;SAMSON MUSIC BOX
	XD SAMC,530     ;SAMSON MUSIC BOX
	XD SAMD,534     ;SAMSON MUSIC BOX
>;IFN FTSAM
IFN FTF2,<
IFN FTAIP,<
	XD IMP,550      ;ARPA INTERGALLACTIC MASSAGE PROCESSOR
>;IFN FTAIP
IFE FTDLS,<
 printx DCA uses device code 700 due to DWP's losing tape opcodes.
;	This should get reassigned someday.  Don't forget to fix DDT.
	XD DCA,700      ;DCA KEYBOARD SCANNER
>;IFE FTDLS
>;IFN FTF2
IFE FTF2,<
;	XD PCLK,730     ;PETIT'S CALENDAR CLOCK
>;IFE FTF2
IFN FTGRIN,<
	XD GRN,740	; GRINNELL INTERFACE
>;IFE FTGRIN
IFE FTF2,<
	XD AS,774       ;AUDIO SWITCH
>;IFE FTF2
;IOP AND MPX BITS ;⊗

;IOP CONI/CONO
;7		35-33 PI CHANNEL
XD	IOPJDN,10	;JOB DONE
XD	IOPNXM,20	;NON-EX-MEM
XD	IOPMIS,40	;DATA MISS

XD	IOPPAR,100000	;PARITY ERROR
XD	IOPRLY,200000	;EARLY RESPONSE (ALSO SETS DATA MISS)

XD	IOPANY,IOPNXM!IOPMIS!IOPPAR!IOPRLY	;ANY ERROR BIT


;CONO MPX,E
XD MCLRAV,400000	;CLR ACCESS VIOLATION FOR DEVICE
XD MCLKWV,200000	;CLR WRITE VIOLATION FOR DEVICE
XD MCLRNX,100000	;CLR NXM
XD MCLRPE,40000		;CLR PAR ERR
XD MRESET,20000		;RESET
XD MDVRST,10000		;RESET DEVICE
			;7000 IS DEVICE CODE
XD MPXDEV,1000		;LOW BIT OF 3 BIT DEVICE CODE
XD MCPTPE,400		;CLR PAGE TABLE PARITY ERROR
XD MCWPE,200		;CLR WRITE PARITY ERROR
XD MCRPE,100		;CLR READ PARITY ERROR
XD MDISMP,40		;DISABLE MAPPING FOR DEVICE
XD MENBMP,20		;ENABLE MAPPING FOR DEVICE
XD MENBPI,10		;ENABLE LOAD PIA
;7 IS PIA

;CONI MPX,E
XD MBUSY,100		;BUSY
XD MINT,40		;INTERRUPTING
XD MNXM,20		;NXM
XD MPARER,10		;PARITY ERROR
;7 IS PIA

XD MPXSHF,9		;SHIFT FOR MPXDEV

XD MPXMAX,2		;LARGEST MPX DEVICE CODE CURRENTLY ASSIGNED
XD IIIMPX,2		;III IS MPX DEVICE 2
XD DDDMPX,1		;DD IS MPX DEVICE 1
XD DSKMPX,0		;DISK IS MPX DEVICE 0
;C1 DISK CHANNEL AND DISK DEFINITIONS ;⊗ TRKCYL BKPTRK RCPBLK SWPWRP SECSIZ SWPAKS FPACKS UPACKS TRKCYL BKPTRK RCPBLK SWPWRP SECSIZ SWPAKS FPACKS UPACKS NPACKS NSBUFS RECSIZ RECWSH CRMAX BKPGRP BKDSIZ SWDSIZ BLKWDS RCPGRP RCPTRK NSYPGS C1SBI C1RSI C1MPRL C1SRUN C1CONT C1SCH C1RST C1CCIF C1INTE C1INTD C1SCF1 C1CCF1 C1MPCN C1LCD C1LPT C1SYSR C1SCAN C1SDIA C1DCI CIF CF1 CF2 ATTN STMOD CUEND IBMBSY CHNEND DEVEND UCHK UXCPTN DHNGCT DLHNGCT BITCL0 CMDRJT BITCL1 BITCL2 BITCL4 BITCL5 WRTINH PERM BITEQU SKCHK SKINCP RTYABT DVERR DWERR HACOR CNTCOR KEYCOR DATCOR HAUCOR CNTUCO KEYUCO DATUCO ERRUSE

IFN FTSUAI,<
↓TRKCYL←←=19		;TRACKS PER CYLINDER
↓BKPTRK←←1		;1 BLOCK PER TRACK FOR NOW
↓RCPBLK←←=18		;NUMBER OF RECORDS PER BLOCK
↓SWPWRP←←1		;First record of each track used for swapping
↓SECSIZ←←40		;WORDS/DISK SECTOR (Size of Retrieval area)
↓SWPAKS←←1		;NUMBER OF PACKS WITH SWAPPING AREAS ASSIGNED
↓FPACKS←←1		;NUMBER OF FILE SYSTEM PACKS;
↓UPACKS←←0		;NUMBER OF USER DISK PACKS
>;IFN FTSUAI

IFN FTCCRMA,<
↓TRKCYL←←=19		;TRACKS PER CYLINDER
↓BKPTRK←←1		;1 BLOCK PER TRACK FOR NOW
↓RCPBLK←←=31		;NUMBER OF RECORDS PER BLOCK (NOT COUNTING RETRIEVAL)
↓SWPWRP←←4		;First record of each track used for swapping
↓SECSIZ←←200		;WORDS/DISK SECTOR FOR RETRIEVAL
↓SWPAKS←←1		;NUMBER OF PACKS WITH SWAPPING AREAS ASSIGNED
↓FPACKS←←1		;NUMBER OF FILE SYSTEM PACKS;
↓UPACKS←←2		;NUMBER OF USER DISK PACKS
>;IFN FTCCRMA

;IF YOU CHANGE THE FILE SYSTEM CONFIGURATION, YOU MUST ALSO CHANGE THE
;FOLLOWING PROGRAMS:  RALPH, UNDEL, FORMAT, DSKDMP, DSKUSE
;(FORMAT and DSKDMP know only the total number of drives, namely NPACKS)

↓NPACKS←←FPACKS+UPACKS	;NUMBER OF PACKS (INCLUDING SWAPPING/UDP PACK)
↓NSBUFS==NPACKS				;Number of system buffers
IFN FTRH,<IFG 8-NSBUFS,<↓NSBUFS←←8>>	;minimum of 8 sys buffers for RH disks
;At Sail NPACKS is going to zero, but NSBUFS better not, hence the above line.


↓RECSIZ←←200		;RECORD SIZE
↓RECWSH←←7		;RECSIZ LOG 2 i.e., shift record count to word count
↓CRMAX←←RCPBLK+1	;TOTAL RECORDS PER BLOCK (INCLUDING RETRIEVAL)
↓BKPGRP←←2*20		;16 WORDS OF HALFWORD PTRS.
↓BKDSIZ←←RECSIZ*RCPBLK	;BLOCK DATA AREA SIZE
↓SWDSIZ←←BKDSIZ-<<SWPWRP-1>*RECSIZ>	;Swapping track data area.
↓BLKWDS←←BKDSIZ+SECSIZ	;TOTAL BLOCK SIZE (INCLUDING RTVL).
↓RCPGRP←←RCPBLK*BKPGRP	;RECORDS/GROUP.
↓RCPTRK←←BKPTRK*CRMAX	;NUMBER OF RECORDS PER TRACK INCL. RETRIEVAL

↓NSYPGS←←<BLKWDS*NSBUFS+777>/1000	;NUMBER OF PAGES OF SYSBUF NEEDED

;SEE UNCDAT FOR OTHER DEFINITIONS

;CONO C1A BITS

C1SBI←←400000		;SELECT BUS INTERFACE
  C1RSI←←40000		;RESET INTERFACE
  C1MPRL←←20000		;RELOAD MICROCODE
  C1SRUN←←10000		;SET CLOCK RUN
  C1CONT←←2000		;CONTINUE CLOCK
C1SCH←←200000		;SELECT CHANNEL
  C1RST←←40000		;RESET CHANNEL
  C1CCIF←←20000		;CLEAR CHANNEL INTERRUPT FLAG
  C1INTE←←10000		;INTERRUPT ENABLE
  C1INTD←←4000		;INTERRUPT DISABLE
  C1SCF1←←2000		;SET CF1
  C1CCF1←←1000		;CLEAR CF1
  C1MPCN←←400		;CONTINUE MICROPROCESSOR
  C1LCD←←20		;LOAD CODE FROM BITS 32-35
;BITS 32-35 ARE A CODE, BIT 32 IS OFF FOR "SOFTWARE" CODES:
  C1LPT←←11		;LOAD PROGRAM TABLE STARTING ADDRESS
  C1SYSR←←2		;SYSTEM RESET
  C1SCAN←←7		;SCAN PROGRAM TABLE FOR PROGRAMS TO START

C1SDIA←←100000		;SELECT DIAGNOSTIC FUNCTIONS

;CONI C1A BITS

C1DCI←←10		;DISCONNECT IN FROM CU
CIF←←4			;CHANNEL INTERRUPT FLAG
CF1←←2			;CHANNEL FLAG 1 (INTERRUPT THE Z80, SET FROM ICH IN CONO)
CF2←←1			;CHANNEL FLAG 2 (Z80 READY FOR PROGRAM TABLE ADDRESS)

;IBM STATUS BYTE BITS
ATTN←←200
STMOD←←100
CUEND←←40
IBMBSY←←20
CHNEND←←10
DEVEND←←4
UCHK←←2
UXCPTN←←1

;HUNG COUNT FOR DISK IN SECONDS
DHNGCT←←=5		;LETS TRY 5 SECONDS FOR NOW
DLHNGCT←←=60		;DIAG LOAD TAKES PRETTY LONG

;THE FOLLOWING BITS ARE FOUND IN THE FIRST 2 SENSE BYTES
BITCL0←←155		;CLASS 0 BITS
CMDRJT←←100000		;COMMAND REJECT IS SPECIAL
BITCL1←←20000		;CLASS 1 BITS	CHANNEL BUS OUT PARITY ERROR
BITCL2←←4000		;CLASS 2 BITS	DATA CHECK
BITCL4←←2000		;CLASS 4 BITS	OVERRUN
BITCL5←←40002		;CLASS 5 BITS	INTRVNTN RQD, WR INH
WRTINH←←2		;WRITE INHIBITED
PERM←←200		;PERMANENT ERROR
BITEQU←←10000		;EQUIPMENT CHECK

;THESE ARE FOUND IN SENSE BYTE 7
SKCHK←←1⊗4+=10		;SEEK CHECK
SKINCP←←1⊗4+=11		;SEEK INCOMPLETE
RTYABT←←0⊗4+6		;RETRY ABORTED
DVERR←←0⊗4+4		;INVALID DATA ARG (PROBABLY DIAG. LOAD)
DWERR←←0⊗4+5		;DIAGNOSTIC WRITE CONTROL BIT ERROR (FILE MASK PROHIB)
HACOR←←5⊗4+0		;HA FIELD CORRECTABLE
CNTCOR←←5⊗4+1		;COUNT FIELD CORRECTABLE
KEYCOR←←5⊗4+2		;KEY FIELD CORRECTABLE
DATCOR←←5⊗4+3		;ECC CORRECTABLE ERROR IN A DATA FIELD
HAUCOR←←4⊗4+0		;HA FIELD UNCORRECTABLE
CNTUCO←←4⊗4+1		;COUNT FIELD UNCORRECTABLE
KEYUCO←←4⊗4+2		;KEY FIELD UNCORRECTABLE
DATUCO←←4⊗4+3		;DATA FIELD UNCORRECTABLE
ERRUSE←←6		;ERROR USAGE STATISTICS IS FORMAT 6
;XGP DEFINITIONS ;⊗ FNTMAX

↓FNTMAX←←200	;MAXIMUM NUMBER OF FONTS
;STANDARD MAG TAPE DENSITY(556 BPI),PARITY(ODD-BINARY) ;⊗
	XD STDENS,2
				; STANDARD MAG TAPE DENSITY
				;STDENS=D+P WHERE D AND P ARE:
				;D=1(200 BPI);D=2(556 BPI);D=3(800 BPI)
				;P=0(ODD-BINARY PARITY);P=4(EVEN-BCD PARITY)
;NO. OF TIMES TO TRY ON DECTAPE ERRORS
	XD DTTRY,4
				; NUMBER OF RETRYS ON DECTAPE ERRORS
;SIZE OF MAGTAPE RECORDS(DATA WORDS IN BUFFER)
	XD MTSIZ,200
				; SIZE FOF MAGTAPE RECORDS
;SIZE OF LPT BUFFER(NO. OF DATA WORDS)
	XD LPTSIZ,=24
				; SIZE OF LPT BUFFERS
; SIZE OF LPT SYSTEM BUFFER
	XD LPTBLN,300
; SIZE OF PTP SYSTEM BUFFER
	XD PTPBLN,320
;MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE RESCHEDULING
	XD BLKQNT,=50
				; MAX. NO. OF CONSECUTIVE DECTAPE BLOCKS BEFORE
				;RESCHEDULING IF ANOTHER JOB WAITING
; SPECIAL LOCATIONS IN MEMORY
	XD DDTMEM,37
				; MEMORY SIZE FOR SYSTEM DDT AND SYSMAK
	XD DDTSYM,36
; INTERRUPT BIT DEFINITIONS, APR CONI BIT DEFINITIONS, PC FLAGS ;⊗ CPUMSK

	XD	PION,200
	XD	PIOFF,400
	XD	USRMOD,10000
	XD	BISFLG,20000
	XD	ADRBRK,040000
	XD	IOTUSR,004000
IFN FTMAOFF,<
	XD	MAOFF,40
>;IFN FTMAOFF

IFKL10,<				;KL10 APR BITS
					;CONI		CONO	CONI BIT N-18
	XD	SWEEPB,200000		;Sweep busy		
	XD	KLENBF,100000		;		Enb flgs selected by b24:31
	XD	KLDISF, 40000		;		Dis flgs selected by b24:31
	XD	KLCLRF, 20000		;		Clr flgs selected by b24:31
	XD	KLSETF, 10000		;		Set flgs selected by b24:31
	XD	KLSBUS,  4000		;SBUS error flg	EDCS	Enable
	XD	KLNXM,   2000		;NXM error flg	EDCS	Enable
	XD	IOPFAI,  1000		;I/O Page fail	EDCS	Enable
	XD	MBPAR,    400		;MB parity err	EDCS	Enable
	XD	CDPAR,    200		;Cache dir par	EDCS	Enable
	XD	CAPAR,    100		;Cache addr par	EDCS	Enable
	XD	KLPWR,	   40		;Power Fail	EDCS	Enable
	XD	SWEEPD,	   20		;Sweep Done flg	EDCS	Enable


					;KL10 PC BITS
	XD	PCTRP1,200		;TRAP 1
	XD	PCTRP2,400		;TRAP 2
	XD	PCADFI,1000		;ADDRESS FAILURE INHIBIT
	XD	PCPUBL,2000		;PUBLIC (OR SUPERVISOR) MODE
	XD	PCU,4000		;PREVIOUS CONTEXT USER
	XD	PCPFLG,400000		;PREVIOUS CONTEXT PUBLIC

>;IFKL10

;USER INTERRUPT BIT ASSIGNMENTS - LH FIRST . . .
	XD	INTSWW,400000		; INTERRUPT BEFORE SWAPPING
	XD	INTSWD,200000		; INTERRUPT WHEN SWAP DONE
	XD	INTTTC,100000		; INTERRUPT ON TERMINAL-TYPE CHANGE
	XD	INTFOP,040000		; INTERRUPT PTY CONTROLLER ON OUTPUT FLUSH
	XD	INTTTY,020000		; INTERRUPT ON TELETYPE INPUT
	XD	INTPTI,010000		; INTERRUPT ON PSEUDO-TELETYPE INPUT
	XD	INTMAIL,004000		; INTERRUPT ON MAIL
	XD	INTWAIT,002000		; INTERRUPT ON UUO COMPLETE
	XD	INTPTO,001000		; INTERRUPT ON PSEUDO-TELETYPE OUTPUT
	XD	INTPAR,000400		; PARITY ERROR INTERRUPT
	XD	INTCLK,000200		; CLOCK INTERRUPT
	XD	INTINR,000100		; IMP INTERRUPT BY RECEIVER
	XD	INTINS,000040		; IMP INTERRUPT BY SENDER
	XD	INTIMS,000020		; IMP STATUS CHANGE INTERRUPT
	XD	INTINP,000010		; IMP INPUT WAITING
	XD	INTTTI,000004		; INTERRUPT ON <ESC>I
	XD	INTQXF,2		; INTERRUPT ON Q XFER
;;	XD	INTHAL,1		; INTERRUPT ON ↑C HALT
; INTERRUPT BIT ASSIGNMENTS - RH	; SOME OF THESE ARE KA10 APR BITS
	XD	CNS,400000		; INTERRUPT ON CONS TRAP
	XD	POV,200000		; INTERRUPT ON PDL OV
	XD	INTELF,100000		; INTERRUPT FROM ELF
IFN FTSIX,<
	XD	INTSIX,40000		; INTERRUPT ON INPUT FROM SIX
>;IFN FTSIX
IFN FTSAM,<
	XD	INTSAM,40000		; INTERRUPT ON MESSAGE FROM SAM
>;IFN FTSAM
	XD	ILM,20000		; INTERRUPT ON ILL. MEM. REF.
IFE FTF2,<
	XD	NXM,10000		; INTERRUPT ON NON-EX. MEM.
>;IFE FTF2
IFN FTF2,<
	XD	INTKCH,4000		; INTERRUPT ON ANY MICROSWITCH KBD CHANGE
>;IFN FTF2
	XD	INTQUIT,2000		; INTERRUPT ON QUIT CMD, TO CLOSE CONNECTION
	XD	INTFOV,100		; INTERRUPT ON FLOATING OVERFLOW
	XD	INTOV,10		; INTERRUPT ON ARITHMETIC OVERFLOW

↓CPUMSK←←1B18!1B19!1B22!1B23!1B29!1B32	; MASK FOR CPU INT BITS (EXCEPT CLOCK)
;THE FOLLOWING ARE USED TO CREATE MXQUE ;⊗ NQUES
;THE MAXIMUM QUEUE SIZE
	XD	MXQUE,0

DEFINE	X (A)	<↓MXQUE←←MXQUE+1;>

	QUEUES
	CODES
	PQUES

NQUES←←MXQUE	;THIS IS USED TO PUT THIS VALUE INTO WORD 234
;CHANNEL NUMBERS, CHANNEL TRAP LOCATIONS AND THE PI CHANNEL ON AND OFF BITS ;⊗ SCNPIF

IFE FTSEPONCE,<
;THIS MACRO GETS EXPANDED IN CACDAT
>;IFE FTSEPONCE
;NOTE: JUST CHANGING THIS TABLE IS NOT ENOUGH

DEFINE CHNDEF<
X AD,1		;A/D ON CHANNEL 1.
X ADC,1		;NEW ANALOG-DIGITAL CONVERTER
X DAC,1		;NEW DIGITAL-ANALOG CONVERTER
X DCT,1		;DEC TAPE AND MAG TAPE DATA CONTROL CHANNEL.
IFN FTSAM,<
X SHI,1		;DIGITAL SYNTHESIZER, HIGH PRIORITY CHANNEL
>;IFN FTSAM
X P1D,1		;P1/P2 INTERFACE, CHANNEL ON P2 (SIC)
IFN FTSAM,<
X SLO,2		;DIGITAL SYNTHESIZER, LOW PRIORITY CHANNEL
>;IFN FTSAM
X XGP,2		;XEROX GRAPHICS PRINTER
X VRN,\XGPCHN	;VARIAN DATA CHANNEL ON P2
IFE FTF2,<
X APR,3		;APR ON CHANNEL 3.
X DPY,3		;DISPLAY PROCESSOR ON CHANNEL 3.
X MPX,3		;MAPPIPLEXOR ON CHANNEL 3.
>;IFE FTF2
IFN FTF2,<
IFE FTAPR4,<
X DSK,2		;FILE DISK
X APR,3		;APR ON CHANNEL 3.
>;IFE FTAPR4
IFN FTAPR4,<
X DSK,3		;FILE DISK
X APR,4		;APR ON CHANNEL 4.
>;IFN FTAPR4
>;IFN FTF2
X XG2,4		;XGP TEXT COMPILER CHANNEL ON P2
X VR2,\XG2CHN	;VARIAN DATA CONVERTER ON P2
X DTC,4		;DEC TAPE CONTROLLER.
X MTC,4		;MAG TAPE CONTROLLER.
IFN FTAIP,<	;ARPAnet (or MILnet)
X IMP,4		;IMP interrupts in channel 4 (packet processing at clock level)
>;IFN FTAIP
X SCN,5		;TELETYPE SCANNER.
X CTY,\SCNCHN	;CONSOLE TELETYPE
X KBD,\SCNCHN	;KEYBOARDS FOR DISPLAY CONSOLES.
IFKL10,<
X DTE,\SCNCHN	;KL10/11 INTERFACE (VECTORED INTERRUPT, MUST BE SAME AS SCANNER)
X PUP,\DTECHN	;channel for PUPSER (Ethernet) (actually uses DTE)
>;IFKL10
X KIM,5		;PARALZER
X PTR,5		;PAPER TAPE READER.
X LPT,5		;LINE PRINTER.
X PK,5		;TELEPHONE PAGING KLUDGE
IFE FTF2,<
X DSK,6		;LOW PRIORITY CHANNEL FOR FILE DISK
>;IFE FTF2
NOKL10,<
X PUP,6		;channel for PUPSER (Ethernet)
>;NOKL10
X IOP,6		;167 CHANNEL
X PTP,6		;PAPER TAPE PUNCH.
X PLT,\PTPCHN	;PLOTTER - SAME CHANNEL AS PTP
X DIL,6		;PHONE DIALER
X ELF,6		;PDP-11 ERRORS
X ELD,6		;PDP-11 DATA
X SIX,6		;10-6 INTERFACE
X P2D,6		;P1/P2 INTERFACE, CHANNEL ON P1 (SIC)
IFN FTGRIN,<
X GRN,6		;Grinnell display system
>;IFN FTGRIN
IFN FTPOLY,<
X POL,6		;POLYCEPHELOS (DAC/ADC) on F2
>;IFN FTPOLY
IFN FTRH,<
X PHY,6		;PHYSIO devices (RP07, TU78).  PHYCHN is also defined in PHYPAR.
>;IFN FTRH
X CLK,7		;CLOCK FOR SCHEDULING.
>;DEFINE CHNDEF

IFN FTRH,<INTERNAL PHYCHN>	;make sure this has same value in PHYSIO

DEFINE XP(S,V)<↑S←←V>

IFN FTSEPONCE,<
DEFINE X ! (A,B) <
↓A!CHN←←B
;;A!CHL←←CH!B	;this is still done in CACDAT, after CH1, etc., are defined
A!ON←←1B25+1⊗(7-B)
A!OFF←←1B26+1⊗(7-B)
>;DEFINE X

CHNDEF
>;IFN FTSEPONCE
;BITS IN KBDCHR TABLE.  INDEX INTO TABLE WITH DCA PORT NUMBER. ;⊗

;LH BITS
;The four bits below are all cleared any time a character pair in seen from a
;serialized kbd.
XD SPWREQ,400000	;SPW REQ has been made, awaiting kbd response. MUST BE SIGN.
XD POLTMO,200000	;First second has passed without SPW response from kbd
XD POLTM2,100000	;Second second has passed w/no response, kbd has timed out
XD LEDSPW,40000		;The line editor is repeating a command while key down
XD SERSIZ,=11		;Number of bits in SERDAT byte: above 4 bits + 7 data bits
XD SERBYT,=18-SERSIZ	;Amt to shift SPWREQ, etc, bits to position for DPB SERDAT.
XD SERCLR,<<SPWREQ!POLTMO!POLTM2!LEDSPW>⊗-SERBYT> ;bits cleared when char pair rcvd
;BITS AND FIELDS IN DCATAB:  ;⊗

;DCATAB IS INDEXED BY DCA SCANNER PORT NUMBER, USUALLY IN AC LINE.
;Byte pointers mentioned below are in TTYSER

;LH BITS ARE CURRENT STATUS SETTINGS:

XD DCADTR,400000	;SIGN BIT MEANS DATA TERMINAL READY
XD DCADSR,200000	;DATA SET READY (REG4 BIT 6)
XD DCACAR,100000	;CARRIER (REG4 BIT 5)
;DCASTB byte pointer must agree with above two bits
XD DCAABI,1000		;Baud detect substate of idle
XD DBAUDM,77000		;THESE BITS NONZERO IF IN BAUD DETECT STATE
;DCABAU byte pointer must agree with above six-bit field
XD DCADIL,400		;SET THIS BIT WHEN DIALING OUT, NO BAUD DET.
XD DCACDN,200		;SET WHEN CARRIER GOES DOWN TO DETECT GLITCH
XD DCASYI,100		;SET IF OFFHOOK AT SYSTEM INITIALIZATION
;;; 40 unused
XD SERSPW,20		;LAST CHAR RECEIVED WAS FROM SPW REQ
XD SERSTR,10		;FLAG MEANING 1ST OF 2 BYTES HAS ARRIVED
;;; 7			;BUCKY BITS FROM FIRST BYTE OF SERIALIZED KBD
;DCABKY byte pointer must agree with above 5 bits

;RH BITS ARE PERMANENT OR INITIAL SETTINGS:

XD DCADLB,400000	;DIALNET PORT BIT
XD DCADPB,200000	;DPY (BUCKY BIT PROTOCOL) BIT (MICROSWITCH KBD!)
XD DCABDB,100000	;BAUD DETECT ENABLE BIT
XD DCAPRM,40000		;PERMANENT (NO MODEM)--EXEMPT FROM SYSINI HANGUP, F.DET
XD DCADWN,20000		;SET THIS BIT TO KEEP TTY DOWN.
;;; 14000 unused
XD DCASNX,200		;Low order bit of index of default speed (4 bits).
;;; 3600		;INITIAL SPEED INDEX.  DCASPD byte pointer must agree.
;;; 177			;TTYSER LINE NUMBER
;Display macros and defs ;⊗

IFN FTGRIN,<
;Macro to generate one 2-Grinnell-cmd word.  Just ORs data into opcode.
DEFINE GW(C0,D0,C1,D1) < BYTE (16)<C0>!<D0>,<C1>!<D1>(4)14 > ;14 is two-cmd word

;Now some Grinnell command opcodes
XD G.WID,0	; Write image date
XD G.LSM,010000	;Load Subchannel Mask
XD G.WGD,020000	;Write graphic data
XD G.WAC,022000	;Write alphanumeric character
XD G.LWM,024000	;Load write mode
  XD G.WMB,000200	; REVERSE BACKGROUND (BLACK ON WHITE)
  XD G.WMA,000100	; ADDITIVE WRITES (AS OPPOSED TO REPLACING)
  XD G.WMZ,000040	; ZERO WRITE ON UNSELECTED SUBCHANNELS WITHIN SELECTED CHANNEL
  XD G.WMV,000020	; VECTOR GRAPHICS (AS OPPOSED TO RECTILINEAR GRAPHICS)
  XD G.WMH,000010	; SELECTS DOUBLE HEIGHT ENTITIES
  XD G.WMW,000004	; SELECTS DOUBLE WIDTH ENTITIES
  XD G.WMCS,000002	; CURSOR POSITION (EA+EB,LA+LB) INSTEAD OF (EA,LA) (CURSOR OPTION)
  XD G.WMCV,000001	; TURNS CURSOR ON (VISIBLE) (CURSOR OPTION)
XD G.LUM,026000	;Load update mode
  XD G.UMENC,0	; EA REGISTER UNCHANGED
  XD G.UMEC,1	; EA REGISTER LOADED FROM EC REGISTER
  XD G.UMEAB,2	; EA REGISTER LOADED FROM EA+EB
  XD G.UMLNC,0	; LA REGISTER UNCHANGED
  XD G.UMLC,4	; LA REGISTER LOADED FROM LC REGISTER
  XD G.UMLAB,10	; LA REGISTER LOADED FROM LA+LB
  XD G.UMSNC,0	; S REGISTER UNCHANGED
  XD G.UMS0,20	; S REGISTER CLEARED
  XD G.UMSINC,40	; S REGISTER INCREMENTED
  XD G.UMSDEC,60	; S REGISTER DECREMENTED
XD G.ERS,030000	;Erase whole screen
XD G.ERL,032000	; ERASE LINE
XD G.SLU,034000	;Special location update
  XD G.S,000200	; INHIBIT SCROLL TIMING FUNCTION (E.G. ALLOW FAST SCROLLING)
XD G.LER,040000	;Load E(a) relative
XD G.LEA,044000	;Load E(a) (absolute)
XD G.LEB,050000	;Load E(b) (absolute)
XD G.LEC,054000	;Load E(c) (absolute)
XD G.LLR,060000	;Load L(a) relative
XD G.LLA,064000	;Load L(a) (absolute)
XD G.LLB,070000	;Load L(b) (absolute)
XD G.LLC,074000	;Load L(c) (absolute)
   XD G.W,2000	;Bit in above 8 cmds which forces a graphics write after load
XD G.LDC,100000	;Load display channels
XD G.NOP,110000	;No-op
XD G.SPD,120000	; SELECT PERIPHERAL DEVICE
XD G.LPA,130000	; LOAD PERIPHERAL ADDRESS
; WHAT DOES 140000 DO? NOP?
XD G.LPD,150000	; LOAD PERIPHERAL DATA
XD G.RPD,160000	; READBACK PERIPHERAL DATA
;XD G.NOP,170000	; ANOTHER GRINNEL NOP

XD GRLSIZ,14	;Default number of scanlines per line of Grinnell text
XD GRESIZ,6	;Default number of horizontal pixels per text character.
XD GRGSIZ,8	;Width of graphics cols for Grinnell cursors
XD GRWMAX,2000	;Max number of pixels per line in any Grinnell resolution
>;IFN FTGRIN

IFE FTGRIN,<
DEFINE CW (C1,B1,C2,B2,C3,B3) {<BYTE (8)<B1>,<B2>,<B3>(3)<C1>,<C2>,<C3>>!4}
>;IFE FTGRIN

;; NOW SOME OPCODES AND MACROS FOR GENERATING III INSTRS.

XD DISJMP,20	;DP JMP INSTR. OPCODE.
XD DISJMS,4	; JMS (STORES TWO WORDS)
XD DISJSR,24	; STORES ONLY RETURN ADDR.
XD DISRST,14	;RESTORE.
XD DISSEL,10	;SELECT.
IFN FTF2,< ;This NO-OP doesn't work with address in LH for DPYSER!  Fix someday.
XD DISNOP,12	;ACTUALLY TSS, BUT A GOOD NOP WITH ALL BITS OFF.
>;IFN FTF2 ;DPYSER defines a different no-op
XD DISSKP,12	; TEST AND SKIP
XD DISKPN,32	; TEST AND NOT SKIP

DEFINE LVW(X,Y,TYPE,MODE,BRT,SIZ)	;ASSEMBLES A LONG VECTOR.
  { MVW1 (MODE,TYPE,BRT,SIZ)	;TWIDDLE PARAMS.
	BYTE (11)<X>,<Y>(3).B,.S(2).MD,.TT(3)3 } ;ASSEMBLE INSTR.
DEFINE MVW1 (M,T,BRT,SIZ)
 {IFIDN {M}{A}{.MD←←1;}.MD←←0	;MODE = 'A' FOR ABSOLUTE.
  IFIDN {T}{I}{.TT←←2;}.TT←←0	;TYPE = 'I' FOR INVISIBLE.
  IFIDN {BRT}{}{.B←←0;}.B←←BRT	;BRT = 0 IF OMITTED.
  IFIDN {SIZ}{}{.S←←0;}.S←←SIZ	;SAME FOR SIZ.
}
;Cart interface CONO bits ;⊗

IFN FTSUAI,<
XD ONRED,4		;CONO bit to turn on Red light
XD ONYEL,10		;CONO bit to turn on Yellow light
XD ONBEL,1000		;CONO bit to push bell solenoid
XD ONGRN,200000		;CONO bit to turn on Green light

XD OFFRED,400004	;CONO bits to turn off Red light
XD OFFYEL,400010	;CONO bits to turn off Yellow light
XD OFFBEL,401000	;CONO bits to release bell solenoid
>;IFN FTSUAI
;JBTMSC bits ;⊗ NOXRST STBUFC DVWDIF TEMPPR QQMQTL

;LEFT HALF BITS

;400000			;SIGN BIT MEANS BEEP USER AFTER LONG RUN
NOXRST←←200000		;DON'T RESET XTIME AFTER LEAVING IOWQ
STBUFC←←100000		;CLOCK REQ FOR SETBF8 IS IN FOR THIS JOB
DVWDIF←←40000		;IF JOB IS IN DWQ, IT IS WAITING FOR ONE INTERLOCKED
			;DEVICE TO BE FREE IN ORDER TO GET THE OTHER (VRN/XGP)
TEMPPR←←20000		;JOB HAS HAD SPECIAL TEMPORARY PRIVS, CAN'T BE JOBRD/E'D.

;RIGHT HALF BITS
;remqnt-bits 17		;see REMQNT byte ptr in SCHEDU: remaining quantum count.
  ↓QQMQTL←←4		;number of low-order bits in JBTMSC needed for holding QQMQT
IFL (1⊗QQMQTL)-QQMQT,<.FATAL QQMQTL is too small for QQMQT>
;Pager map bits P.READ P.WRT P.XCT P.CAC P.ACC P.KEEP PREAD PREADC PWRT PWRTC P.IMM P.PUBL ;⊗

IFE FTKLB,<
;Left-half bits in page map entries, indicating type of access permitted.
XD P.READ,100000	;read permission
XD P.WRT,40000		;write
XD P.XCT,20000		;execute
XD P.CAC,10000		;cache
XD P.ACC,40		;access
XD P.KEEP,0		;no "keep" bit if not KL model B with MCA25

;Left-half values for various types of map entries.	
XD PREAD,P.READ ! P.XCT ! P.ACC			;uncached readonly
XD PREADC,P.READ ! P.XCT ! P.ACC ! P.CAC	;cached readonly
XD PWRT,P.READ ! P.XCT ! P.ACC ! P.WRT		;uncached writeable
XD PWRTC,P.READ ! P.XCT ! P.ACC ! P.WRT ! P.CAC	;cached writeable
>;IFE FTKLB

IFN FTKLB,<
;Left-half bits in page map entries, indicating type of access permitted.
XD P.IMM,100000		;immediate page pointer (high 3 bits of 001)
;XD P.PUBL,40000	;public page (never used)
XD P.WRT,20000		;write
XD P.KEEP,10000		;keep page table entry in pager cache during DATAO KLPAG,
XD P.CAC,4000		;cache

;Left-half values for various types of map entries.	
XD PREAD,P.IMM			;uncached readonly
XD PREADC,P.IMM ! P.CAC		;cached readonly
XD PWRT,P.IMM ! P.WRT		;uncached writeable
XD PWRTC,P.IMM ! P.WRT ! P.CAC	;cached writeable
>;IFN FTKLB

INTERN PREAD,P.WRT
;Exec page definitions ;⊗ PSB EXPGT ILLADR DTEEXP DDTPGE P2MNUM P2VORG P2XORG TOPHIP

IFN FTSEPONCE,<

NOKL10,<
;These two definitions have to be here so we can know their difference below.
;If PSB moves in CACDAT, CACDAT will detect that and hit a .FATAL
↓↑EXPGT←←3000	;Exec page table address, has to have this value.
↓↑PSB←←10000	;PSB address for KA (contains last 200 words of exec page table.
>;NOKL10

;FOR THE IFKL10 SYSTEM, THE SYMBOLS xxxEXP ARE MERELY VIRTUAL PAGE NUMBERS.
;FOR THE NOKL10 SYSTEM, THE SYMBOLS xxxEXP ARE DEFINED NOT AS PAGE NUMBERS
;BUT AS OFFSETS OF THE PAGE'S ENTRY IN THE MAP FROM EXPGT.  THUS THE VALUE
;OF  PSB-EXPGT  IS ADDED TO THE NOKL10 PAGE NUMBER IF THAT PAGE IS 600 OR GREATER.
;THIS ALLOWS CODE TO REFERENCE THE PAGE TABLE AS IF IT WERE ALL AT EXPGT,
;IN ADDRESSES LIKE  EXPGT+xxxEXP  or  EXPGT(TAC)  where TAC holds xxxEXP.
DEFINE EXPG ! (TYPE,NUM) <
IFKL10,<
↓TYPE!EXP ←← LSTXPG ←← LSTXPG-<NUM>
>;IFKL10
NOKL10,<
LSTXPG ←← LSTXPG-<NUM>
IFIDN <F2A><TYPE><IFN LSTXPG-770,<.FATAL F2AEXP isn't 770.  Must be, for microcode.>>
↓TYPE!EXP ←← IFGE LSTXPG-600,<PSB-EXPGT+LSTXPG;>LSTXPG
>;NOKL10
>

LSTXPG ←← 1000

;NOTE THAT IF FTEXPG IS ON, THE STUFF BELOW THAT'S ASSEMBLED IN IS CHANGED BY
;PAGINI AND ELSEWHERE WHILE THE SYSTEM IS RUNNING

;DEFINITIONS FOR P1 EXEC PAGES
EXPG (ILL,1)		;FOR FORCING PAGE FAILURE ON UNEXPECTED REFERENCE TO ADDR
↑ILLADR←←ILLEXP⊗9+400	;MIDDLE ADDRESS OF UNUSED PAGE ALLOWS +/- INDEXING
EXPG (MTC,2)		;MTC BLKI/O (2 PAGES)   THESE MUST BE WITHIN THE LAST 8
EXPG (DTC,2)		;DTC BLKI/O (2 PAGES)         "
EXPG (DSK,2)		;DSKINT ECC CODE (2 PAGES)
IFN FTRH,<
EXPG (PHY,1)		;PHYP4/PHYH2/PHYSIO ECC Code
EXPG (FSI,1)		;File system initialize, etc.
	Intern PHYEXP,FSIEXP
>
IFN FTF2,<
EXPG (F2A,1)		;NOT USED BY SOFTWARE, RESERVED FOR F2 XCTR MICROCODE
>;IFN FTF2
EXPG (PEK,1)		;PEEK UUO, also some other UUOs
↓DTEEXP←←PEKEXP		;For loading the PDP-11/40 through the DTE w/DTELOD UUO
EXPG (PAR,1)		;PARITY ERROR SERVICE
↓DDTPGE←←LSTXPG    EXPG (DDT,1)	 ;EXEC DDT FETCH AND DEPOSIT
EXPG (MAP,1)		;APRMAP FOR REFERENCING SHADOW
IFN FTP2,<
EXPG (XGP,1)		;XGP DUMP MODE BLT INTO P2 MEMORY
↓P2MNUM←←3
EXPG (P2M,P2MNUM)	;P1 ADDRESSES OF P2COMM SHARED DATA
↓P2VORG←P2MEXP⊗9	;VIRTUAL WORD ADDRESS OF P2 MEMORY
IFG XGPNUM,<
EXPG (P2X,P2XNUM)	;P1 ADDRESSES OF P2COMM SHARED XGP BUFFER
↑P2XORG←P2XEXP⊗9	;P1 VIRTUAL WORD ADDRESS OF XGP BUFFER
>;IFG XGPNUM
>;IFN FTP2
IFN FTMPP2,<
EXPG (UPM,10)		;EXEC PAGES FOR UPMP REFERENCE, BY PI LEVEL
EXPG (DTU,1)		;DECTAPE UPMP
EXPG (MTU,1)		;MAGTAPE UPMP
EXPG (PAG,1)		;PAGSER/UUOCON UPMP
IFN FTDMDP,<
EXPG (DPG,1)		;DEMAND PAGING UPMP
>;IFN FTDMDP
>;IFN FTMPP2
IFN FTSBP,<
EXPG (SYB,NSYPGS)	;EXEC PAGES FOR SYSBUF
>;IFN FTSBP
IFN FTF2,<
EXPG (F2D,1)		;FOR BLTING DISK DATA TO/FROM ARBITRARY PHYS ADDR
>;IFN FTF2
;(*** ADD NEW PAGES HERE ↑ ***)
IFN FTHIFS,<
↓TOPHIP←←LSTXPG		;FIRST VIRTUAL PAGE NUMBER NOT USABLE FOR HIGH FS
>;IFN FTHIFS
>;IFN FTSEPONCE

IFE FTHIFS,<
XD FSLIMP,LSTXPG	;first page not usable by FS.
>;IFE FTHIFS
IFN FTHIFS,<
XD FSLIMP,620		;FIRST PAGE NUMBER OF HI FS.  LEAVES ABOUT 25K OF HI FS.
>;IFN FTHIFS
IFN FTSUAI,<
IFN FSLIMP-620,<PRINTX You better tell WHOPHN that you changed FSLIMP!>
>;IFN FTSUAI
;JBTCSH - JOB CACHE DISABLE BITS ;⊗

;LEFT HALF

XD CSHON,400000			;SET IF JOB'S PAGES ARE MARKED AS CACHEABLE

;CAN'T CACHE BITS:  EACH IS ON TO SIGNIFY A REASON THIS JOB CAN'T BE CACHED.

XD CSHDD,200			;DATA DISK OUTPUT
XD CSHFB,100			;FASTBAND IO
IFN TVNUM,<
IFE FTTVBUF,<
XD CSHTV,40			;TV IO
>;IFE FTTVBUF
>;IFN TVNUM
XD CSHDSK,20			;DSK DUMP IO
XD CSHXGP,10			;P2 XGP DUMP IO
XD CSHDAC,4			;P2 DAC (OR ADC) DUMP IO
XD CSHSWP,2			;SWAPPING IN PROGRESS
XD CSHSPW,1			;P2 SPACEWAR

XD CSHANY,377			;THE "OR" OF ALL THE CAN'T CACHE REASONS
