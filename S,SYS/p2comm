COMMENT ⊗   VALID 00009 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00004 00002	P1PCXX ZZZ P2INTM P2CLR P2INTB X BK LC
C00008 00003	P1NUM P2LOOP P2NUM DETFLG HNGP2F P1DDTF P1CHRI P1FLGO P1BPTO P1BPTX P1OCNT NOP2HG P2UPTIME P2CKTB SIXRUN P2TSUP P2SNAM
C00013 00004	XPAPER XGPERR TNSIZE VNSIZE NTNODE NVNODE XGPBL1 XGPCSC XGPOST XGPNST XFTADR XGPERC XGPHDB XGPPDX XGPSAC XCUTQ XGPIOS XGPP1F XGPP2F XP2IOW XP2BUF XYNCNT XGPCNT XGPCNY XGPKIL XGPNIW XGPNI2 XGPIWD XGPBIG XGPGCW XDISP1 XDISP2 XDISP3 XGPROG XFCADR XGPRDY XGPAOK XGPBIT XGPGO XGPTMP XPGOOD XTAKE XPUT XBFCNT XGPWSZ XGPBFL XGPFC1 XGPFC2 XCLKNM XFCJN FCRQER XGPSLS XALNTP XCFH XCFBL XCFCPA XHMAX XLBL XFTCAD XSCNLN XSCTOT XGPFFS XGPFFF XGPPG2 XGPHIP XGPHDW XGPAT0 XGPAT1 XGPAT2 XSVCAD XGPIGO XUSTHK XUSBEG 
C00023 00005	VRNIOS VRNUSE VRNRDY VRNKIL VRNGO VRNAOK VCVSTR VRNSTS VP2TOP
C00025 00006	PTRCSC PTRBDP PTRPTR PTRBF1 PTRBF2 PTRACT PTRADV PTRDAT PTRIOS 
C00027 00007	PTPDON PTPNOT PLTENB PLTDON PTPCSC PTPDAT PTPIOS DATIOS PTPSHT DATCMR PTPCNO PTPCNZ PTPDTO PTPCON PTPZBG PTPBUF PTPIBP PTPFCN PTPBCN PTPIDS PTPACT PTPMOD PTPFG1 PTPSID PTPP2D PLTCSC PLTDAT PLTIOS 
C00031 00008	P1BUFL PATCOM P1DDTB KABELL P2TIME P2DATE P2SPAG WAITCT 
C00033 00009	P2EXPGT P2CST ZZZ P2PAG P2PAG1 P2PAGT TSW P2XLOC P2MEND P2PSB 
C00036 ENDMK
C⊗;
;P1PCXX ZZZ P2INTM P2CLR P2INTB X BK LC

IFN FTP2,<	;Whole file

COMMENT ⊗

This file contains definitions that are compiled into both the P1 and P2
systems.  In the P2 system, all the data from this file is actually
loaded.  But in the P1 system, no data is loaded -- only the symbol
definitions are wanted.  To do this, the below macros are used: The X
macro (with optional label) is for a single word of data (omitting second
arg generates only the label); the BK macro (with optional label) is for
BLOCK allocations; and the LC macro is for LOC statements.  In some cases
where the actual code/data is under the switch P2SYS, these macros are not
needed since P2SYS determines exactly which system the code/data is for.

IF YOU CHANGE ANYTHING IN THIS ENTIRE FILE, YOU MUST
THEN RECOMPILE BOTH THE P1 AND THE P2 SYSTEMS, SINCE
THIS FILE IS ASSEMBLED INTO BOTH OF THOSE SYSTEMS.

PLEASE note that because of the X(,), etc., macros, you must maintain the
directory line of each page by hand!

 END OF COMMENT ⊗

IFN P2SYS,<	;The identity function loads data for the P2 system
DEFINE X(L,Y)<IFDIF <><L><L:> Y >
DEFINE BK(L,N)<IFDIF <><L><L:> BLOCK N >
DEFINE LC(L)< LOC L >
>;IFN P2SYS

IFE P2SYS,<	;Avoid causing anything to be loaded in P1 system
DEFINE X(L,Y)<IFDIF <><L><L←ZZZ>   IFDIF <><Y><ZZZ←ZZZ+1>>
DEFINE BK(L,N)<IFDIF <><L><L←ZZZ>   ZZZ←ZZZ+N>
DEFINE LC(L)<ZZZ←P2VORG+L>
>;IFE P2SYS

IFN P2SYS,<
	LOC 0		;BEGINNING OF ABSOLUTE ASSEMBLY FOR P2
>;IFN P2SYS
IFE P2SYS,<
	P1PCXX←←.	;SAVED LOCATION COUNTER TO MAKE SURE P1 DOESN'T LOAD DATA
	ZZZ←←P2VORG	;P1 VIRTUAL ORIGIN OF P2 SPACE
>;IFE P2SYS

;P1/P2 INTERFACE DEFINITIONS
;Note: the device connected to P1's IO bus is called P2D and the one on
;P2's IO bus is called P1D!

P2INTM←←40		;INTERRUPT MYSELF (FOR TESTING W/O OTHER PROCESSOR) (CONO)
P2CLR←←20		;CLEAR INTERRUPT FROM OTHER PROCESSOR (CONO)
P2INTB←←10		;INTERRUPT THE OTHER PROCESSOR (CONO)
			;THE OTHER PROCESSOR IS INTERRUPTING ME (CONI)
;P2PIA←←7		;BITS HOLDING PI CHANNEL (CONO AND CONI)
;P1NUM P2LOOP P2NUM DETFLG HNGP2F P1DDTF P1CHRI P1FLGO P1BPTO P1BPTX P1OCNT NOP2HG P2UPTIME P2CKTB SIXRUN P2TSUP P2SNAM

;The following cells are NOT loaded when P2SYS is reloaded (because they're
;below P2 relative 200) but are nevertheless in the common area.

	LC(100)		;LOCATION 100 IN P2 CORE
	X(↑P1NUM,0)	;SETOMed BY P1 WHEN IT STARTS, SETZMed ON RELOAD
	X(↑P2LOOP,<JRST .>)	;LOOP HERE WHILE P2LOAD PROGRAM RELOADS US

	LC(200)		;Skip over low core PI, etc, locations for P2

	X(,<JRST 4,.>)		;200 - P1 INITIALIZATION, DON'T START P2 HERE

IFN FTP2DDT,<X(,<JRST DDT>)>	;201 - GO INTO EXEC DDT
IFE FTP2DDT,<X(,<HALT .>)>	;201 - IF THERE'S NO DDT

	X(,<HALT .>)		;202 - (USED TO BE SYSMAK-MAKE NEW SYSTEM OF JOB 1)

	X(,<HALT .>)		;203 - INITIALIZE EVERYTHING. (JRST SYSIN0)

	X(,<JRST P2INI>)	;204 - P2 RESTART ADDRESS.

	X(,<HALT .>)		;205 - BRING MACHINE UP IN MAINTENANCE MODE

	X(,<HALT .>)		;206 - WRITE OUT SYSTEM ON THE SWAPPING DISK

	X(,<HALT .>)		;207 - ERROR STOP - WRITES OUT SAT AND STOPS

X(↑P2NUM,0)		;SET TO -1 WHEN P2 SYSTEM IS ON THE AIR
			;THE P2LOAD PROGRAM KNOWS THIS IS 210 IN P2 CORE!
X(↑DETFLG,0)		;SETOM WHEN OK TO INIT P2 DEVICES
			;THIS IS 211 SO ITS LOC WILL NEVER EVER CHANGE!
X(↑HNGP2F,0)		;SETOM TO TELL P1 TO HUNG TIMEOUT OUR DEVICES
			;P2LOAD KNOWS THIS IS 212
X(↑P1DDTF,0)		;P1 SETS THIS -1 TO SEND P2 INTO DDT
			;UP2DDT KNOWS THIS IS 213
X(↑P1CHRI,0)		;P1 SENDS CHAR INPUT TO P2 DDT HERE
			;UP2DDT KNOWS THIS IS 214
X(↑P1FLGO,-1)		;P1 SETS THIS TO +N TO GET N CHARS OF P2 DDT O/P
			; 0 HLDS DDT O/P, -1 NORMAL CASE
			;UP2DDT KNOWS THIS IS 215
X(↑P1BPTO,0)		;WHERE TO DEPOSIT P2 DDT O/P
			;UP2DDT KNOWS THIS IS 216
X(↑P1BPTX,<POINT 7,P1DDTB>)	;INITIAL BYTE POINTER FOR P2 DDT O/P
			;UP2DDT KNOWS THIS IS 217
X(↑P1OCNT,<5*P1BUFL-1>)	;LENGTH IN CHARS OF P1DDTB
			;UP2DDT KNOWS THIS IS 220
X(↑NOP2HG,0)		;SET TO -1 TO SUPPRESS HUNG TIMEOUT FOR P2 DEVICES
			;UP2DDT KNOWS THIS IS 221
X(↑P2UPTIME,0)		;UPTIME IN CURRENT P2 SYSTEM IN TICKS
			;UP2DDT KNOWS THIS IS 222
X(↑P2TSUP,0)		;-1 MEANS SUPPRESS TYPEOUT ON P2 CTY WHEN TYPING TO P1
			;UP2DDT AND EDDT KNOW THIS IS 223
X(↑P2SNAM,'P2SYS ')	;SYSTEM NAME FOR DISTINGUISHING SYSTEM FROM DIAGNOSITICS
			;P2LOAD KNOWS THIS IS 224

DEFINE P2CHKS<
P2C(XGPIOS)
P2C(PTRDAT)
P2C(PTPDAT)
IFG PLTNUM,<
P2C(PLTDAT)
>;IFG PLTNUM
P2C(KABELL)
P2C(P2MEND)
P2C(P2XLOC)
>;P2CHKS  Macro defines a few random locations to check for P1/P2 agreement

	LC(240)		;SAVE SOME ROOM FOR P2 LOWCORE POINTERS
DEFINE P2C(AD)<
	X(,AD)
>
X(P2CKTB,)		;LOCATION OF P2 CHECK TABLE (240)
	P2CHKS		;TABLE OF LOCATIONS TO CHECK

;This cell should be called P2RUN.  It causes P2 to trap if core gets cleared.
;See P2 null job code.
X(SIXRUN,JFCL)		;TESTED BY P2'S NULL JOB (MUST BE IN LOW CORE)
;XPAPER XGPERR TNSIZE VNSIZE NTNODE NVNODE XGPBL1 XGPCSC XGPOST XGPNST XFTADR XGPERC XGPHDB XGPPDX XGPSAC XCUTQ XGPIOS XGPP1F XGPP2F XP2IOW XP2BUF XYNCNT XGPCNT XGPCNY XGPKIL XGPNIW XGPNI2 XGPIWD XGPBIG XGPGCW XDISP1 XDISP2 XDISP3 XGPROG XFCADR XGPRDY XGPAOK XGPBIT XGPGO XGPTMP XPGOOD XTAKE XPUT XBFCNT XGPWSZ XGPBFL XGPFC1 XGPFC2 XCLKNM XFCJN FCRQER XGPSLS XALNTP XCFH XCFBL XCFCPA XHMAX XLBL XFTCAD XSCNLN XSCTOT XGPFFS XGPFFF XGPPG2 XGPHIP XGPHDW XGPAT0 XGPAT1 XGPAT2 XSVCAD XGPIGO XUSTHK XUSBEG 

;LH BITS IN XGPIOS (referenced in XGPSER)
	↑XPAPER←←200		;XGP IS RUNNING PAPER NOW (PAPER UP TO SPEED)
	↑XGPERR←←400		;P2 DETECTED ERROR

;Node sizes (referenced in XGPSER)
↑TNSIZE←←100			;SIZE OF TEXT NODE
↑VNSIZE←←5			;VECTOR NODE SIZE

X(↑XGPIOS,0)
BK(↑XGPCSC,PSYNCN)		;INTER PROCESSOR SYNCHRONIZATION.

X(↑XGPP1F,0)		;SET TO SIGNAL P1
X(↑XGPP2F,0)		;SET TO SIGNAL P2

X(↑XP2IOW,0)		;P2 PUTS USER-RELATIVE IOWD HERE TO GET P1 TO DO BLT
X(↑XP2BUF,0)		;P2 PUTS ITS PAGE NUMBER FOR XGP BUFFER HERE FOR BLT

X(↑XYNCNT,0)		;SYNC COUNT
X(↑XGPCNT,0)		;COUNTS VARIOUS THINGS
X(↑XGPCNY,0)		;COUNTS PAPER FEED AT END
X(↑XGPKIL,0)		;SET WHEN P1 WANTS XGP TO DIE.

X(↑XGPNIW,0)		;NEXT IOWD FOR P2
X(↑XGPNI2,0)		;REMAINDER OF XGPNIW THAT XADV HASN'T USED UP
X(↑XGPIWD,0)		;IOWD FOR CURRENT DUMP COMMAND
X(↑XGPBIG,0)		;REMAINDER OF IOWD
X(↑XGPGCW,0)		;GROUP CONTROL WORD.

X(↑XDISP1,0)		;DISPATCH LEVEL 1
      X(,<JRST 12,@XGPCHL>) ;DISMISS INTERRUPT.
			;JSR XDISP1 TO CHANGE DISPATCH AND DISMISS

X(↑XDISP2,0)		;DISPATCH LEVEL 2
      X(,<POPJ P,>)

;TABLE FOR SETXIO ON P1 TO SET P2'S DISPATCH ADDRESS IN XDISP2 (ABOVE)
;THIS TABLE HAS TO CONTAIN P2-RELATIVE DISPATCH ADDRESSES TO BE USED BY P2
;THE OFFSETS HERE MUST MATCH THOSE DEFINED IN XGPSER BELOW XIODSP.
X(↑XDISP3,0)		;THIS STAYS ZERO, MEANS ILLEGAL MODE
       X(,XCIBEG)
       X(,XDIBEG)

IFE FTP2PAG,<
X(↑XGPROG,0)		;RELOC OF USER.
>;NO P2PAGER

X(↑XFCADR,0)		;RELATIVE ADDRESS OF THE FC
X(↑XGPRDY,0)		;P2 SETS THIS -1 FOR XGP READY.
X(↑XGPAOK,0)		;P2 SETS THIS ON EACH INTERRUPT.
X(↑XGPBIT,0)		;P1 TELLS WHAT IT WANTS HERE
X(↑XGPGO,0)		;SET BY P1 WHEN JOB LOCKED IN.
X(↑XGPTMP,0)		;1 CELL FOR I-LEVEL.
X(↑XPGOOD,0)		;CELL FOR 'GOOD CUTS'.

X(↑XTAKE,0)		;POINTER FOR P2.
X(↑XPUT,0)		;POINTER FOR P1.
X(↑XBFCNT,0)		;COUNT OF WORDS USED IN BUFFER.
X(↑XGPWSZ,0)		;SIZE NEEDED BEFORE REACTIVATION.
X(↑XGPBFL,0)		;FLAG SET FOR MODE 10, ZEROED FOR 17

BK(↑XGPOST,20)		;OLD STATUS OF FC
BK(↑XGPNST,20)		;NEW STATUS OF FC.
X(↑XGPFC1,0)		;SET WHEN WE WAIT FOR FC
X(↑XGPFC2,0)		;SET WHEN FC WAITS FOR US
X(↑XCLKNM,0)		;CLOCK REQUEST IDENTIFIER
X(↑XFCJN,0)		;FC JOB NUMBER
X(↑FCRQER,0)		;FLAG FOR FC NOT RESPONDING.
BK(↑XFTADR,FNTMAX)	;ADDRESS OF FONT TABLE IN FC

X(↑XGPSLS,0)		;SPECIAL LINE SPACE COUNT. '177'1'42

X(↑XALNTP,0)		;-1 IF DOING XGP ESCAPE 6 TO ALIGN FONTS AT TOP
X(↑XCFH,0)		;CURRENT FONT HEIGHT
X(↑XCFBL,0)		;CURRENT BASE LINE
X(↑XCFCPA,0)		;CURRENT COLUMN POSITION ADJUSTMENT.
X(↑XHMAX,0)		;MAXIMUM HEIGHT IN CURRENT LINE.
X(↑XLBL,0)		;XLBL CURRENT LINE'S BASE LINE.
X(↑XFTCAD,0)		;CURRENT FONT ADDRESS (RELOCATED)
X(↑XSCNLN,0)		;CURRENT SCAN LINE IN LINE
X(↑XSCTOT,0)		;TOTAL SCANLINES OUTPUT SINCE XGP INITED
X(↑XGPFFS,0)		;NUMBER OF FFS OUTPUT BY CH 2 (FOR XSPOOLER)
X(↑XGPFFF,0)		;NEGATIVE OF NUMBER OF REAL FFS CH 4 HAS PENDING
BK(↑XGPERC,4)		;ERROR CONDITION CODES.
X(↑XGPPG2,0)		;"PAPER PAGE" COUNT
X(↑XGPHIP,0)		;LH "HEADING IN PROGRESS", RH "QUOTE NEXT CHAR"
X(↑XGPHDW,0)		;IOWD FOR HDB
BK(↑XGPHDB,=26)		;TEXT FOR HEADINGS. USE HDW
X(↑XGPAT0,0)		;SAVED TAC DURING PAPER PAGE NUMBER PRINTING
X(↑XGPAT1,0)		;SAVED TAC1 DURING PAPER PAGE NUMBER PRINTING
X(↑XGPAT2,0)		;PAPER PAGE NUMBER IN ASCII
X(↑XSVCAD,0)		;SAVE OLD FONT WHILE IN HEADING.
X(↑XGPIGO,0)		;SET TO -1 BY P2 WHEN DATA XFER
X(↑XUSTHK,0)		;THICKNESS OF UNDERSCORE.
X(↑XUSBEG,0)		;COLUMN OF BEGINNING UNDERSCORE.
X(↑XCHBGO,0)		;SET TO ADDRESS OF FIRST TEXT NODE.
X(↑XVNODE,0)		;SET TO ADDRESS OF VECTOR NODE.

;LIST HEADERS FOR COMPILER/TEXT PROCESS
X(↑XVNFL,0)		;VECTOR NODE FREE LIST
X(↑XTNFL,0)		;TEXT NODE FREE LIST
X(↑XATLH,0)		;ACTIVE TEXT LIST
X(↑XASVLH,0)		;ACTIVE NARROW VECTOR LIST
X(↑XALVLH,0)		;ACTIVE WIDE VECTOR LIST
X(↑XPENDH,0)		;PENDING QUEUE HEAD
X(↑XPENDT,0)		;PENDING QUEUE TAIL

BK(XGPPDX,20)		;PDL FOR CHANNEL 4 COMPILER.
X(↑XGPPDL,<-20,,XGPPDX-1>) ;POINTER TO PDL

X(↑XACT4,0)		;FLAG CH4 NEEDS ACTIVATION.
X(↑XCYPOS,0)		;Y POSITION FOR CURRENT LINE.
X(↑XGPLYP,0)		;LAST Y POSITION QUEUED
X(↑XFREBA,0)		;POINTER TO BLOCK IN FC.
X(↑XNODUS,0)		;# OF TEXT NODES IN USE.
X(↑XTOFRM,0)		;SET TO -1 WHEN THERE IS TEXT Q'ED
BK(↑XGPSAC,20)		;CH4 CO-ROUTINE AC'S


BK(↑XCUTQ,=48)		;QUEUE OF CUT POINTS
X(↑XCUTBP,<POINT 36,XCUTQ-1,35>) ;BYTE POINTER TO XCUTQ
;Increasing the following number makes the cut move down the page, i.e.,
;shortens the space between the cut and the first line of printing.
;(a change of about =200 or 310 corresponds to an inch on the page)
X(↑XGPDLY,10770)	;DELAY FROM PRINTING TIME UNTIL CUTTING TIME

;THE REST OF THIS IS INITIALIZED BY RESET
↑NTNODE←←=16			;(DEFAULT) NUMBER OF TEXT NODES
↑NVNODE←←=100			;(DEFAULT) NUMBER OF VECTOR NODES
↑XGPBL1←←P2XNUM⊗9		;(DEFAULT) SIZE OF SYSTEM BUFFER

;THE PARAMETERS BELOW ARE INITIALIZED FROM XMSET IN CACDAT, MUST BE IN SAME ORDER.
X(↑XGPPS1,=200)		;TOP TO FIRST LINE MARGIN
X(↑XGPPS2,=1800)	;TOP LINE TO LAST LINE SIZE.
X(↑XGPPS3,=200)		;LAST LINE TO BOTTOM MARGIN
X(↑XGPLMR,=200)		;LEFT MARGIN
X(↑XGPRMR,=1650)	;RIGHT MARGIN
X(↑XGPILS,4)		;INTER-LINE SPACING
X(↑XNTNOD,NTNODE)	;NUMBER OF TEXT NODES
X(↑XNVNOD,NVNODE)	;NUMBER OF VECTOR NODES
X(↑XGPBLN,XGPBL1)	;SIZE OF SYSTEM BUFFER
X(↑XGPICS,0)		;INTER-CHARACTER SPACING

X(↑XP2BOT,0)		;CONTAINS ADDRESS OF BEGINNING OF P2'S XGP DUMP MODE BUF
X(↑XP2TKR,0)		;TAKR - WHAT BUFFER WE'LL READ FROM
X(↑XP2OTK,0)		;PREVIOUS VERSION OF TAKR - WHAT BUFFER WE'RE NOW READING
X(↑XP2PTR,0)		;PUTR - WHAT DOESN'T HAVE DATA
X(↑XDBCNT,0)		;COUNT OF DUMP MODE BUFFERS XFERRED, FOR DEBUGGING
X(↑XP2TOP,0)		;PAGE NUMBER OF PAGE BEYOND END OF XGP DUMP MODE BUFFERS

X(↑CP2TOP,0)		;CONTAINS VALUE FROM XP2BOT OR VP2TOP, IF XGP OR VRN IN USE
X(↑XVOCNT,0)		;NUMBER OF PENDING XGP/VRN OUTPUT UUOS, FOR OVERLAPPED MODE
;VRNIOS VRNUSE VRNRDY VRNKIL VRNGO VRNAOK VCVSTR VRNSTS VP2TOP

IFN FTVRN,<
X(↑VRNIOS,0)	;DEVIOS FOR VRN
X(↑VRNUSE,0)	;SET TO -1 BY P1 WHEN STARTING VRN, CLEARED WHEN VRN STOPPED
X(↑VRNRDY,0)	;FLAG FOR MTAPE TO REPORT STATUS OF VRN
X(↑VRNKIL,0)	;FLAG SET WHEN P1 WANTS P2 TO STOP VRN
X(↑VRNGO,0)	;FLAG SAYING VRN HAS BEEN STARTED, RH CLEARED WHEN VRN HUNG
X(↑VRNAOK,0)	;FLAG SAYING VRN IS INTERRUPTING WITH GOOD STATUS
X(↑VCVSTR,0)	;SET TO -1 BY P1 WHEN P2 SHOULD START VRN CH4 CONVERTER
X(↑VCVGO,0)	;SET TO -1 BY P1 WHEN P2 SHOULD RESTART VRN CH4 CONVERTER
X(↑VRNSTS,0)	;VRN CONI BITS WHEN SOME BAD BIT HAS COME ON
X(↑VP2TOP,0)	;PAGE NUMBER OF PAGE BEYOND END OF VRN DUMP MODE BUFFERS
X(↑VRNWAT,0)	;Negative number of ticks before timeout for data missed
>;IFN FTVRN
;PTRCSC PTRBDP PTRPTR PTRBF1 PTRBF2 PTRACT PTRADV PTRDAT PTRIOS 

;; The following cells contain P2-SPACE addresses, must be relocated if used by P1.

X(↑PTRBDP,0)			;POINTER TO DEPOSIT BUFFER
X(↑PTRPTR,0)			;BYTE POINTER INTO INTERNAL BUFFER.

;LOOKS LIKE 2 BUFFERS, BUT THEY LIVE IN THE SYSTEM.
X(↑PTRBF1,0)
       X(,<41,,PTRBF2+1>)
	BK(,41)
X(↑PTRBF2,0)
       X(,<41,,PTRBF1+1>)
	BK(,41)


X(↑PTRACT,0)
X(↑PTRADV,0)
BK(↑PTRCSC,PSYNCN)

;PTR's IOS AND SHT MUST BE IN THIS ORDER TO MATCH PTPDAT, FOR P2'S STOIOS.
X(↑PTRDAT,)			;SHARED DATA AREA
X(↑PTRIOS,0)			;REAL IOS WORD
       X(,0)			;-1 MAKES P1 RESET HUNG TIME COUNT
;PTPDON PTPNOT PLTENB PLTDON PTPCSC PTPDAT PTPIOS DATIOS PTPSHT DATCMR PTPCNO PTPCNZ PTPDTO PTPCON PTPZBG PTPBUF PTPIBP PTPFCN PTPBCN PTPIDS PTPACT PTPMOD PTPFG1 PTPSID PTPP2D PLTCSC PLTDAT PLTIOS 

IFN P2SYS,<
DEFINE	ZWD (A)<
↑A←←.-PTPDAT
X(,0)	>
DEFINE	ZLOC (A)<
↑A←←.-PTPDAT >
>;IFN P2SYS

IFE P2SYS,<
DEFINE	ZWD (A)<
↑A←←ZZZ-PTPDAT
X(,0)	>
DEFINE	ZLOC (A)<
↑A←←ZZZ-PTPDAT >
>;IFE P2SYS

;PTP CONO BITS
	PTPDON←←10		; DONE FLAG
	PTPNOT←←100		; 'OUT OF TAPE' FLAG

BK(↑PTPCSC,PSYNCN)		;SYNCHRONIZER REGISTERS

;PTPIOS AND PTPSHT MUST BE FIRST TWO TO MATCH PTRDAT
X(↑PTPDAT,)			;SHARABLE DATA AREA
X(↑PTPIOS,)
ZLOC (DATIOS)	X(,0)			;THE REAL IOS WORD!
ZWD (PTPSHT)				;P2 ASKING P1 TO RESET HUNG TIME COUNT
ZLOC (DATCMR)	X(,PTPCSC)		;POINTER TO SYNC CELLS
ZLOC (PTPCNO)	X(,<CONO PTP,PTPDON+PTPCHN>) ;REQUEST DONE INTERRUPT, SET PIA
ZLOC (PTPCNZ)	X(,<CONSZ PTP,PTPDON!PTPNOT>) ;INTERRUPT ON DONE OR NO TAPE.
ZLOC (PTPDTO)	X(,<DATAO PTP,AC1>)	;SEND DATA.
ZWD (PTPCON)				;SET TO PTPCN2 BY P2INI
ZLOC(PTPZBG)				;BEGINNING OF AREA ZEROED AT PTPINI
ZLOC (PTPBUF)
		BK(,PTPBLN)		;BUFFER ITSELF
ZWD (PTPIBP)				;INTERRUPT-LEVEL BYTE POINTER
ZWD (PTPFCN)				;PUNCH FEED COUNT
ZWD (PTPBCN)				;BUFFER CHARACTER COUNT
ZWD (PTPIDS)				;INTERRUPT-LEVEL DISPATCH LOCATION
ZWD (PTPACT)				;FLAG BY P1 ASKS P2 TO TURN ON PTP
NOKL10,<ZWD (PTPMOD)  >;NOKL10		;0 FOR USE P1, -1 FOR USE P2
;PTPSID MUST BE LAST!
X(↑PTPFG1,)
ZWD (PTPSID)				;P2 ASKING P1 TO CALL SETIOD

;TABLE FOR PTPSKE ON P1 TO SET P2'S DISPATCH ADDRESS.
;THIS TABLE HAS TO CONTAIN P2-RELATIVE DISPATCH ADDRESSES TO BE USED BY P2
;THE OFFSETS HERE MUST MATCH THOSE DEFINED IN PTPSER BELOW PTPSKC.
X(PTPP2D,PTPT1)
	X(,PTPT2)
	X(,PTPT3)

IFG PLTNUM,<

;PLT CONO BITS
	PLTENB←←10		;ENABLE DONE INTERRUPT 
	PLTDON←←20		;DONE BIT.


BK(↑PLTCSC,PSYNCN)		;SYNCHRONIZER REGISTERS

X(↑PLTDAT,)			;SHARABLE DATA AREA
X(↑PLTIOS,0)			;THE REAL IOS WORD
	X(,0)			;-1 TELLS P1 TO RESET HUNG COUNT
	X(,PLTCSC)			;POINTER TO SYNC CELLS
	X(,<CONO PLT,PLTDON!PLTCHN!PLTENB>) ;REQUEST DONE INTERRUPT. SET PIA
	X(,<CONSZ PLT,PLTDON>)		;INTERRUPT ON DONE
	X(,<DATAO PLT,AC1>)		;SEND DATA
	BK(,PTPSID-PTPDTO)	;THE REST IS THE SAME AS PTPDAT
>;IFG PLTNUM
;P1BUFL PATCOM P1DDTB KABELL P2TIME P2DATE P2SPAG WAITCT 

X(↑KABELL,0)		;SETOM ON KL TO CAUSE KA'S CTY TO RING BELLS
X(↑P2TIME,0)		; TIME OF DAY IN TICKS SINCE MIDNIGHT
X(↑P2DATE,0)		;TODAY'S DATE((Y-1964)*12+M-1))*31+(D-1)
X(↑P2SPAG,0)		;NUMBER OF PAGES IN P2 SYSTEM
X(↑WAITCT,<0,,-1>)	;HOW LONG P1 WILL WAIT FOR P2
BK(PATCOM,100)		;PATCH AREA ACCESSIBLE TO BOTH MACHINES
↑P1BUFL←←14		;LENGTH OF CHARACTER BUFFER FOR P2 DDT
BK(↑P1DDTB,P1BUFL)	;THE O/P CHARACTER BUFFER

;P2EXPGT P2CST ZZZ P2PAG P2PAG1 P2PAGT TSW P2XLOC P2MEND P2PSB 

X(P2MEND,)	;Address for P1 to check to make sure right P2 system is loaded
		;This should be the last thing before the LOC 3000 below

IFN P2SYS,<
IFG .-3000,<
.FATAL TOO MUCH DATA IN P2COMM OCCURS BEFORE P2EXPGT, WHICH MUST BE AT 3000
>;IFG

IFN FTP2DDT,<
	LOC 74		;CONVINCE SAVE COMMAND TO SAVE ENTIRE CORE IMAGE
	0,,DDT		;AFTER LOADING WITH SYMBOLS
>;IFN FTP2DDT

LOC 3000

↓P2EXPGT:		;P2 EXEC PAGE TABLE
>;IFN P2SYS

LC(4000)

;CORE STATUS TABLE
;BITS 0:8 ARE AGE
;BIT 9 IS THE MODIFICATION BIT
;BITS 18-26 ARE THE USAGE CODE

IFN P2SYS,<
↓P2CST:
>;IFN P2SYS
XLIST
	REPEAT P2SIZE,<X(,<100000,,0>)>
LIST

IFN P2SYS,<
LOC <.+777>∧777000		;NEXT PAGE BOUNDARY
>;IFN P2SYS
IFE P2SYS,<
ZZZ←<ZZZ+777>∧777000		;NEXT PAGE BOUNDARY
>;IFE P2SYS

X(↓P2PSB,<PWRT,,0>)		;THIS IS ALSO THE USER MODE PAGE TABLE FOR P2
	BK(,577)
XLIST
FOR I←600,777 <
	X(,<PWRT,,I>)		;uncached write access
>
LIST

IFN P2SYS,<
IFL <P2XBPG⊗9>-.,<.FATAL INCREASE P2XBPG AND RECOMPILE BOTH SYSTEMS>
>;IFN P2SYS
	LC(P2XBPG⊗9)
	BK(P2XLOC,P2XNUM⊗9)

IFN P2SYS,<
↓P2PAG←←71	;LOCATIONS USED BY CONO PAG, ON KA10
↓P2PAG1←←72	;  "
↓P2PAGT←←170	;THIS IS THE TRAP LOCATION FOR PAGE FAULTS
↓TSW←←571	;TRAP STATUS WORD (ADDRESS IN PSB)
>;IFN P2SYS

IFE P2SYS,<
IFN .-P1PCXX,<.FATAL SOME CODE ATTEMPTED TO LOAD P1 IN P2COMM>
>;IFE P2SYS

>;IFN FTP2	;Whole file
